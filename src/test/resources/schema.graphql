schema {
  query: Query
  mutation: Mutation
}

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @extends on OBJECT | INTERFACE

directive @external on FIELD_DEFINITION

directive @key(fields: _FieldSet!) on OBJECT | INTERFACE

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type AbnormalSalesOrderPayload {
  "异常单品"
  abnormalCategory: String
  "异常商品列表"
  abnormalCommodity: [OrderListSkuInfo]
  "异常销售状态"
  abnormalStatus: AbnormalSalesOrderStatus
  "订单号"
  orderCode: String
  "订单id"
  orderId: ID
  "开单时间"
  orderTime: Long
  "开单人"
  orderUserName: String
}

"售后小票返回对象"
type AfterSalesTicketPayload {
  "客户ID"
  customerId: Int
  "客户名称"
  customerName: String
  "退货商品明细"
  returnCommodities: [CommodityPayload]
  "退货单号"
  returnOrderCode: String
  "退货订单id"
  returnOrderId: Int!
  "退货总数量"
  returnTotalQuantity: [SalesNumCount]
  "退货审核人"
  reviewerName: String
  "销售单号"
  saleOrderCode: String
  "退货发起人"
  sponsorName: String
  "退货订单创建时间"
  time: Long
}

" 入库/出库商品明细"
type AllocateCommodityDetailPayload {
  " 库存id"
  batchId: ID
  " 商品名称"
  commodityName: String
  " 换算数量"
  convertQuantity: BigDecimal
  " 换算单位Id"
  convertUnitId: Int
  " 成本"
  costPrice: BigDecimal
  " 成本单位Id"
  priceUnitId: Int
  " 数量"
  quantity: BigDecimal
  " SKU ID"
  skuId: Int
  " 小计"
  totalAmount: BigDecimal
  " 单位Id"
  unitId: Int
}

type AllocateCostBaseInfoPayload {
  " 运杂费单号"
  costCode: String
  " 操作人"
  operator: String
  " 调入组织名称"
  orgInName: String
  " 调出组织名称"
  orgOutName: String
  " 出库时间"
  outboundTime: Long
  " 备注"
  remark: String
  " 订单状态"
  status: AllocateStatus
  " 入库时间"
  stockInTime: Long
  " 调拨单号"
  transferCode: String
}

type AllocateCostCommodityDetailPayload {
  " 批次id"
  batchId: ID
  " 成本单价"
  costPrice: BigDecimal
  " 单价单位Id"
  priceUnitId: Int
  " 数量"
  quantity: BigDecimal
  " sku id"
  skuId: Int
  " 名称"
  skuName: String
  " 单品小计"
  totalAmount: BigDecimal
  " 数量单位Id"
  unitId: Int
  " 单价"
  unitPrice: BigDecimal
}

type AllocateCostCountPayload {
  " 已提交数量"
  submitNum: Int
  " 待提交数量"
  waitSubmitNum: Int
}

type AllocateCostDetailPayload {
  " 金额总计"
  allocatedTotalAmount: BigDecimal
  " 审核状态"
  approvalStatusEnum: AllocateApprovalStatusEnum
  " 车牌"
  board: String
  " 是否能审核"
  canApprovalStatus: Boolean
  " 商品信息"
  commodityDetail: [AllocateCostCommodityDetailPayload]
  " 货款合计"
  commodityTotalAmount: BigDecimal
  " 调拨运杂费单号"
  costCode: String
  " 运杂费备注"
  costRemark: String
  " 杂费合计"
  costTotalAmount: BigDecimal
  " id"
  id: ID
  " 物流费合计"
  logisticsCostAmount: BigDecimal
  " 制单人 发起调拨人"
  operator: String
  " 调入组织"
  orgInName: String
  " 调出组织"
  orgOutName: String
  " 提交时间"
  outboundTime: Long
  " 结算方式"
  payModeName: String
  " 联系电话"
  phone: String
  " 备注"
  remark: String
  " 提交状态"
  submitStatus: AllocateCostStatus
}

type AllocateCostInfoPayload {
  " 调拨基本信息"
  allocateCostBaseInfo: AllocateCostBaseInfoPayload
  " 费用详情"
  costInformationDetail: [CostInformationDetailPayload]
  " 运杂费合计"
  costTotalAmount: BigDecimal
  " 调拨单id"
  flowId: ID
}

type AllocateCostPayload {
  " 调拨费用单id"
  allocateCostId: ID
  " 调拨单状态枚举"
  allocateCostStatusEnum: AllocateCostEnum
  " 调拨单状态名称"
  allocateCostStatusName: String
  " 调拨成本"
  allocatedTotalAmount: BigDecimal
  " 审核状态枚举"
  approvalStatusEnum: AllocateApprovalStatusEnum
  " 审核状态"
  approvalStatusName: String
  " 调拨货款合计"
  commodityTotalAmount: BigDecimal
  " 调拨运杂费单号"
  costCode: String
  " 调入运杂费详情"
  costInItemDetail: [CostItemPayload]
  " 调出运杂费详情"
  costOutItemDetail: [CostItemPayload]
  " 杂费合计"
  costTotalAmount: BigDecimal
  " 调拨单id"
  flowId: ID
  " 关联入库单号"
  inWarehouseCode: String
  " 入库时间"
  inWarehouseTime: Long
  " 物流费合计"
  logisticsCostAmount: BigDecimal
  " 调入组织"
  orgInName: String
  " 调出组织"
  orgOutName: String
  " 关联出库单号"
  outboundCode: String
  " 出库时间"
  outboundTime: Long
  " 备注"
  remark: String
  " 提交人"
  submitter: String
  " 调拨单号"
  transferCode: String
}

type AllocateOrderPayload {
  " 调拨费用单id"
  allocateCostId: ID
  " 调出人"
  allocateOutUser: String
  " 批次号"
  batchCode: String
  " 批次id"
  batchId: ID
  " 柜次"
  cabinetBatchCode: String
  " 取消原因"
  cancelReason: String
  " 商品名称"
  commodityName: String
  " 调拨单id"
  flowId: ID
  " 入库审核人"
  flowInStockAuditUser: String
  " 调拨单是否生成"
  hasFlowTransferOrder: Boolean
  " 调入组织id"
  orgInId: Int
  " 调入组织名称"
  orgInName: String
  " 调出组织id"
  orgOutId: Int
  " 调出组织名称"
  orgOutName: String
  " 价格单位Id"
  priceUnitId: Int
  " 数量"
  quantity: BigDecimal
  " 备注"
  remark: String
  " SKU ID"
  skuId: Int
  " 订单状态"
  status: AllocateStatus
  " 入库时间"
  stockInTime: Long
  " 出库时间"
  stockOutTime: Long
  " 出/入库单号"
  stockRecordCode: String
  " 出库记录主键Id"
  stockRecordId: ID
  " 合计"
  totalAmount: BigDecimal
  " 调拨单号"
  transferCode: String
  " 排序唯一id"
  uniqueId: ID
  " 数量单位Id"
  unitId: Int
  " 单价"
  unitPrice: BigDecimal
  " 入库类型"
  warehouseInType: AllocateOrderWarehouseInTypeEnum
  " 仓库"
  warehouseName: String
}

type AllocatePayload {
  " 入库单号"
  stockInCode: String
  " 入库id"
  stockInId: ID
  " 入库类型"
  stockInType: WareHouseType
  " 出库单号"
  stockOutCode: String
  " 出库id"
  stockOutId: ID
  " 出库类型"
  stockOutType: OutBoundType
}

" 调拨单详情"
type AllocateStockRecordPayload {
  " 调出人"
  allocateOutUser: String
  " 调拨合计金额"
  allocatedTotalAmount: BigDecimal
  " 取消原因"
  cancelReason: String
  " 取消时间"
  cancelTime: Long
  " 取消人"
  canceler: String
  " 未聚合商品信息"
  commodityDetail: [AllocateCommodityDetailPayload]
  " 运杂费单号"
  costCode: String
  " 运杂费详情"
  costInformationDetail: [CostInformationDetailPayload]
  " 运杂费合计"
  costTotalAmount: BigDecimal
  " 调拨单id"
  flowId: ID
  " 入库审核人"
  flowInStockAuditUser: String
  " 调入组织id"
  orgInId: Int
  " 调入组织名称"
  orgInName: String
  " 调出组织id"
  orgOutId: Int
  " 调出组织名称"
  orgOutName: String
  " 收货时间"
  receiptTime: Long
  " 收货人"
  receiver: String
  " 备注"
  remark: String
  " 订单状态"
  status: AllocateStatus
  " 入库时间"
  stockInTime: Long
  " 出库时间"
  stockOutTime: Long
  " 出/入库单号"
  stockRecordCode: String
  " 出库记录主键Id"
  stockRecordId: ID
  " 出入库类型"
  stockRecordType: StockRecordType
  " 商品合计"
  totalAmount: BigDecimal
  " 调拨单号"
  transferCode: String
  " 聚合后商品信息"
  warehouseCommodityDetail: [AllocateWarehouseCommodityDetailPayload]
}

type AllocateWarehouseCommodityDetailPayload {
  " 车牌号"
  carNo: String
  " 商品信息"
  commodityDetail: [AllocateCommodityDetailPayload]
  " 挂车号"
  trailerCarNo: String
  " 仓库"
  warehouseName: String
}

" 审核相关信息结果"
type AuditStockRecordPayload {
  " 调拨时间-调出组织出库时间"
  allocateOutDeliveryTime: Long
  " 调出组织"
  allocateOutOrganization: String
  "商品信息"
  commodityInformation: [CommodityInformationPayload]
  " 入库类型"
  entryType: WareHouseType
  " 调拨单id"
  flowId: ID
  " 采购/调拨杂运费"
  miscellaneousFreight: [MiscellaneousFreightPayload]
  " 备注信息"
  remark: String
  " 合计种类"
  species: Int
  " 供应商名称"
  supplierName: String
}

" 订单基本信息"
type BaseInfo {
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: CustomerType
  " 客户类型描述"
  customerTypeDesc: String
  " 所属商户"
  merchantName: String
  " 订单号"
  orderCode: String
  " 关联退货订单信息"
  relationReturnOrderInfo: [RelationReturnOrderInfo]
  " 订单状态"
  statusDesc: String
}

" 报表相关枚举"
type BaseSelectOption {
  disable: Boolean
  label: String
  value: String
}

" 退货基本信息对象"
type BasicInfo {
  " 客户ID"
  customerId: Int
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: Int
  " 客户类型"
  customerTypeDesc: String
  " 客户财务系统编码"
  financialSystemCode: String
}

type BreakageRecordDetailPayload {
  " 报损照片"
  breakagePictures: [PictureInfoPayload]
  " 报损单"
  breakageReceipts: [PictureInfoPayload]
  " 商品列表"
  commodityDetail: [CommodityDetailPayload]
  " 出库单号"
  orderCode: String
  " 出库记录Id"
  stockRecordId: ID
}

type BreakageRecordPayload {
  " sku补充id"
  assistId: String
  " 批次号"
  batchCode: String
  "报损数量-商品单位转换"
  breakageUnitConversion: CurrentUnitConversion
  " 主键id"
  id: ID
  " 出库订单号"
  orderCode: String
  " 出库订单id"
  recordId: ID
  " 备注"
  remark: String
  " 商品skuId"
  skuId: Int
  " 商品名称"
  skuName: String
  " 出库时间"
  stockOutTime: Long
  "出库数量-商品单位转换"
  stockUnitConversion: StockQuantityUnit
}

type CalculateOrderAmountResp {
  calculateOrderDetailList: [CalculateOrderDetailResp]
  totalAmount: BigDecimal
}

type CalculateOrderDetailResp {
  batchId: ID
  batchTotalAmount: BigDecimal
}

type CalculatorPaymentPayload {
  debitFormsList: [DebitFormPayload]
}

" 收银员返回结果"
type CashierListPayload {
  cashierList: [CashierPayload]
}

" 收银员信息"
type CashierPayload {
  " 收银员id"
  cashierId: Int
  " 收银员名称"
  cashierName: String
}

type CheckPayload {
  msg: String
  success: Boolean
}

type CheckStockBatchDetailPayload {
  " 批次id"
  batchId: ID
  " 可售库存"
  canSaleQuantity: StockQuantityUnit
  " 系统库存"
  entryQuantity: StockQuantityUnit
  " 入库时间"
  entryTime: Long
  " 锁定库存"
  lockQuantity: StockQuantityUnit
  " 库存暂存数量"
  temporaryQuantity: CurrentUnitConversion
}

type CheckStockBatchListPayload {
  stockBatchInfos: [CheckStockBatchPayload]
}

type CheckStockBatchPayload {
  " 批次库存ID"
  batchId: ID
  " 批次库存可售数量"
  stockQuantity: BigDecimal
}

type CheckStockBatchSkuPayload {
  " 商品sku_id"
  commoditySkuId: Int
  " sku名称"
  skuName: String
  " 商品SKU下库存详情"
  stockBatchRecords: [CheckStockBatchDetailPayload]
  "sku比例换算"
  unitConversion: UnitConversion
}

type CommodityAliasListPayload {
  " 商品品类名称"
  commodityCategoryName: String
  " SKU别名"
  commoditySkuAlias: String
  " SKU名称"
  commoditySkuName: String
  "商品别名id"
  id: Int
}

type CommodityAliasQueryPayload {
  pageCurrent: Int
  pageSize: Int
  records: [CommodityAliasListPayload]
  totalRecords: Int
}

type CommodityCategoryCountListPayload {
  commodityCategoryCounts: [CommodityCategoryCountPayload]
}

type CommodityCategoryCountPayload {
  " 品类ID"
  commodityCategoryId: Int
  " 品类名称"
  commodityCategoryName: String
  " 购物车条数"
  shoppingCarCount: Long
}

"商品品类下拉列表返回值"
type CommodityCategoryOptionPayload {
  categoryId: Int
  categoryName: String
}

type CommodityCategoryPayload {
  " 品类id"
  categoryId: Int
  " 品类名称"
  categoryName: String
}

" 商品明细信息"
type CommodityDetail {
  " 批次号"
  batchStockCode: String
  " 批次id"
  batchStockId: ID
  " 商品sku名称"
  commoditySkuName: String
  " 指导价"
  guidePrice: String
  " 商品异常标签"
  labelRemarkList: [String]
  "价格单位"
  priceType: Int
  " 数量"
  quantity: BigDecimal
  "数量单位"
  quantityUnitType: Int
  " 金额合计"
  totalAmount: BigDecimal
  " 单价"
  unitPrice: BigDecimal
}

" 入库/出库商品明细"
type CommodityDetailPayload {
  "入库申请数量-商品单位转换"
  applyUnitConversion: CurrentUnitConversion
  " sku补充id"
  assistId: String
  " 批次号"
  batchCode: String
  " 商品名称"
  commodityName: String
  " 采购/调拨-成本价"
  costPrice: BigDecimal
  " 主键id"
  id: Int
  "价格单位"
  priceType: Int
  " 原因"
  reason: String
  " 商品skuId"
  skuId: Int
  "标准商品单位转换"
  stockUnitConversion: StockQuantityUnit
  "实际出入库数量-商品单位转换"
  unitConversion: CurrentUnitConversion
  " 仓库"
  warehouseName: String
}

type CommodityInfoPayload {
  " 商品别名"
  commodityAlias: String
  " 数量"
  quantity: BigDecimal
  " 单位Id"
  unitId: Int
}

" 商品信息"
type CommodityInformationPayload {
  "入库申请数量-商品单位转换"
  applyUnitConversion: CurrentUnitConversion
  "  商品权限（ false 无权限  true 有权限）"
  authority: Boolean
  " 采购/调拨-成本价"
  costPrice: BigDecimal
  " 商品名称"
  name: String
  "价格单位"
  priceType: Int
  " 批次id"
  stockBatchId: ID
  "实际出入库数量-商品单位转换"
  stockQuantityUnit: CurrentUnitConversion
  "sku单位换算配比关系"
  unitConversion: UnitConversion
}

"商品标签对象"
type CommodityLabelPayload {
  "品类id"
  categoryId: Int
  "品类名称"
  categoryName: String
  "标签id"
  id: ID
  "标签名称"
  name: String
  "标签说明"
  remark: String
  "状态 1:启用 99:禁用"
  status: Int
  "标签类型id，1:通用  2:品质异常"
  type: Int
  "标签类型描述"
  typeDesc: String
}

"退货商品明细"
type CommodityPayload {
  "sku Id"
  commoditySkuId: Int
  "sku名称"
  commoditySkuName: String
  "数量单位类型"
  quantityUnitType: Int
  "退货数量"
  returnQuantity: BigDecimal
}

" 商品销售明细"
type CommoditySalesListPayload {
  " 品类名称"
  categoryName: String
  " 品类id"
  commodityCategoryId: Int
  " sku销售信息"
  commoditySkuDetail: [SkuDetailInfo]
  " 今日销售金额"
  salesAmount: BigDecimal
  " 今日销售数量"
  salesNum: [SalesNumCount]
}

type CommoditySelectedPayload {
  "商品规格集合"
  commoditySpecs: [CommoditySpecPayload]
}

type CommoditySkuPayload {
  skuId: Int
  skuName: String
  "单位换算对象"
  unitConversion: UnitConversion
}

" 商品规格选项集合"
type CommoditySpecOptionPayload {
  "规格选项ID"
  CommoditySpecOptionId: Int
  "规格选项ID"
  CommoditySpecOptionName: String
}

" specOption"
type CommoditySpecOptionsPayload {
  optionId: Int
  optionName: String
}

" 商品规格类型集合"
type CommoditySpecPayload {
  "规格类型ID"
  CommoditySpecId: Int
  "规格类型ID"
  CommoditySpecName: String
  "规格选项集合"
  CommoditySpecOptions: [CommoditySpecOptionPayload]
}

"  spec"
type CommoditySpecsPayload {
  commoditySpecOptions: [CommoditySpecOptionsPayload]
  specId: Int
  specName: String
}

type CommoditySpuPayload {
  " 品类id"
  spuId: Int
  " 品类名称"
  spuName: String
}

"商品单位对象"
type CommodityUnitPayload {
  "单位id"
  unitId: Int
  "单位名称"
  unitName: String
}

" 消费信息"
type ConsumeInfo {
  " 收银备注"
  cashRemark: String
  commodityDetail: [CommodityDetail]
  " 优惠金额"
  discountMoney: BigDecimal
  " 付款详情"
  paymentDetail: [PaymentInfo]
  " 实收金额"
  receivableMoney: BigDecimal
  " 订单备注"
  remark: String
  " 应收金额"
  totalMoney: BigDecimal
}

type ControlCommodityCategoryPayload {
  " 品类id "
  categoryId: Int
  " 品类名称 "
  categoryName: String
  " 商品管控id "
  commodityControlId: ID
  " 待办数量 "
  toDoCount: Int
}

type ControlCommoditySkuPayload {
  " 基本单位id "
  basicTypeId: Int
  " 商品管控Id "
  commodityControlId: ID
  " 商品SkuId "
  commoditySkuId: Int
  " 商品Sku名称 "
  commoditySkuName: String
  " 最低指导价 "
  minGuidePrice: BigDecimal
  " 指导价单位Id "
  priceUnitId: Int
  " 状态 "
  state: GuidePriceState
}

type CostInformationDetailPayload {
  " 金额"
  amount: BigDecimal
  " 车牌"
  board: String
  " 费用类型"
  costType: CostType
  " 费用名称"
  costTypeName: String
  " 备注"
  note: String
  " 付款方式"
  payMode: PayMode
  " 联系电话"
  phone: String
  " 供应商"
  supplierId: Int
  " 供应商名称"
  supplierName: String
}

" 运杂费对象"
type CostItemPayload {
  " 金额"
  amount: BigDecimal
  " 车牌"
  board: String
  " 费用类型"
  costType: CostType
  " 费用类型名称"
  costTypeName: String
  " 运杂费备注"
  note: String
  " 付款方式"
  payMode: PayMode
  " 联系电话"
  phone: String
  " 供应商"
  supplier: String
}

" 列表集合对象"
type CostReportFormListPayload {
  " 批次号"
  batchStockCode: String
  " 是否有采购费用单"
  hasPurchaseCost: Boolean
  " 主键"
  id: ID
  " 订单编号"
  orderCode: String
  " 采购地"
  placeOfPurchase: String
  " 价格单位Id"
  priceUnitId: Int
  " SKU ID"
  productId: Long
  " SKU名称"
  productName: String
  " 采购费用单id"
  purchaseCostId: ID
  " 采购日期"
  purchaseDate: Long
  " 采购人"
  purchaseName: String
  " 数量"
  quantity: BigDecimal
  " 备注"
  remark: String
  " 供应商所属区域"
  supplierArea: String
  " 供应商名称"
  supplierName: String
  " 总金额合计"
  totalAmount: BigDecimal
  " 金额合计"
  totalMoney: BigDecimal
  " 总数量合计"
  totalNumber: BigDecimal
  " 采购单位Id"
  unitId: Int
  " 单价"
  unitPrice: BigDecimal
}

" 列表分页对象"
type CostReportFormPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [CostReportFormListPayload]
  totalRecords: Long
}

" 列表获取费用类型返回信息"
type CostTypePayload {
  " 费用类型ID"
  costId: ID
  " 费用类型名称"
  costName: String
}

type CountCreditCustomerPayload {
  "已授信客户数量"
  creditCustomerNum: Long
}

type CountOrderStatusPayload {
  unpaidOrderNum: Int
  unpickOrderNum: Int
}

" 采购费用单统计返回结果"
type CountPurchaseCostByStatusPayload {
  " 已提交采购费用单"
  submitNum: Int
  " 待提交采购费用单"
  toSubmitNum: Int
}

type CountReturnOrderStatusPayload {
  " 已审核数量"
  reviewedNum: Int
  " 待审核数量"
  unReviewNum: Int
}

type CreateOrderPayload {
  " 过期时间"
  orderCancelHour: Int
  orderCode: String
  orderId: Int
  " 应付金额"
  payableAmount: BigDecimal
  paymentCode: String
}

" 客户欠款查询返回对象 "
type CreditCustomerInfoPayload {
  " 当前页码 "
  pageCurrent: Int
  " 每页显示条数 "
  pageSize: Int
  " 数据列表 "
  records: [CreditCustomerListPayload]
  " 动态表头 "
  tableHead: [String]
  " 总条数 "
  totalRecords: Long
}

" 客户欠款查询返回列表对象 "
type CreditCustomerListPayload {
  " 欠款总额 "
  creditTotalAmount: BigDecimal
  " 客户属性 "
  customerAttribute: AttributeTypeEnum
  " 客户ID "
  customerId: Long
  " 客户名称 "
  customerName: String
  " 维度统计信息 "
  dimensionStatistics: [CustomerDimensionStatisticsPayLoad]
  " 逾期欠款总额 "
  overdueTotalAmount: BigDecimal
}

type CreditCustomerPayload {
  "客户别名"
  alias: String
  " 客户属性  (1:内部, 2:外部);"
  attribute: AttributeTypeEnum
  " 可用额度"
  availableAmount: BigDecimal
  " 客户授信编码"
  creditCode: ID
  " 额度"
  creditLine: BigDecimal
  " 账期"
  creditPeriod: Int
  " 欠款总额"
  creditTotalAmount: BigDecimal
  " 当前最近的一次客户授权禁用填写的原因"
  disableRemarks: String
  "客户id"
  id: Int
  "客户名称"
  name: String
  " 逾期天数 -2即将逾期 大于0已逾期"
  overdueDay: Int
  " 超期欠款总额"
  overdueTotalAmount: BigDecimal
  " 是否签订协议合同 1.是 0.否"
  signAgreement: Int
  " 证明资料"
  supportingMaterials: [FilePayload]
  "客户类型(1:个人，2：公司，3：零售)"
  type: CustomerType
  " 使用状态(1：启用，99：禁用)"
  useStatus: Int
}

"当前单位转换对象"
type CurrentUnitConversion {
  "换算数量"
  convertQuantity: BigDecimal
  "换算单位Id"
  convertUnitId: Int
  "skuId"
  skuId: Int
  "单位Id"
  unitId: Int
  "单位数量"
  unitQuantity: BigDecimal
}

" 当前用户信息"
type CurrentUserPayload {
  "头像"
  avatar: String
  " 是否需要更新密码"
  needUpdatePassword: Boolean
  "公司名称"
  organizationName: String
  "联系方式"
  phone: String
  "团队角色"
  roleNames: [String]
  "用户ID"
  userId: Int
  "用户名称"
  userName: String
}

type CustomerBaseInfoPayload {
  "客户属性"
  attribute: AttributeTypeEnum
  "法人"
  corporation: String
  "客户id"
  id: Int
  "客户身份证号码"
  idNumber: String
  "客户姓名"
  name: String
  "纳税人识别号"
  taxpayerIdentificationNumber: String
  "客户类型"
  type: CustomerType
}

" 客户联系人"
type CustomerContact {
  " 联系人别名"
  alias: String
  "关联用户id"
  contactUserId: Int
  " 客户联系人id"
  id: Int
  " 联系人姓名"
  name: String
  " 联系人电话"
  phone: String
  "内部联系人在职状态"
  userStatus: UserStatusEnum
}

" 客户联系人"
type CustomerContactPayLoad {
  "联系人别名"
  alias: String
  "关联用户id"
  contactUserId: Int
  "客户详情id"
  customerDetailId: Int
  "分类文件列表"
  fileRecord: [FileRecordPayload]
  "客户联系人id"
  id: Int
  "联系人身份证号"
  idNumber: String
  "联系人姓名"
  name: String
  "联系人电话"
  phone: String
  "备注"
  remark: String
  "内部联系人在职状态"
  userStatus: UserStatusEnum
}

type CustomerCreditCreatePayload {
  " 授信编码"
  creditCode: ID
}

" 客户欠款详情对象 "
type CustomerCreditInfoPayload {
  " 当前页码 "
  pageCurrent: Int
  " 每页显示条数 "
  pageSize: Int
  " 客户欠款列表 "
  records: [CustomerCreditPayload]
  " 总条数 "
  totalRecords: Long
}

" 客户欠款详情列表对象 "
type CustomerCreditPayload {
  " 欠款金额 "
  creditAmount: BigDecimal
  " 欠款情况 "
  creditDateCount: Int
  " 欠款单号 "
  debitFormCode: String
  "商品明细"
  debtCommodityInfoList: [DebtOrderCommodityInfoPayload]
  "回款信息"
  debtMoneyBackInfoList: [DebtMoneyBackInfoPayload]
  " 欠款状态 "
  debtOrderStatusEnum: DebtOrderStatusEnum
  " 回款金额 "
  moneyBackAmount: BigDecimal
  " 支付详情 "
  payInfo: String
  " 退款结算 "
  refundAmount: BigDecimal
  " 销售单号 "
  saleOrderCode: String
  " 销售日期 "
  salesDate: Long
  " 唯一性id "
  uniqueId: Long
}

type CustomerDebtCountPayload {
  "欠款客户数量"
  customerNumber: Int
  "欠款总额"
  debitTotalAmount: BigDecimal
  "欠款单数量"
  debtOrderCount: Long
  "欠款合计"
  debtOrderTotalAmount: BigDecimal
}

"客户欠款详情返回结果对象"
type CustomerDebtDetailListPayload {
  "欠款单号"
  debitFormCode: String
  "欠款单id"
  debitFormId: ID!
  "欠款单欠款金额"
  debitMoney: BigDecimal
  "欠款单状态"
  debtOrderStatus: DebtOrderStatusEnum
  "欠款单状态描述"
  debtOrderStatusDesc: String
  "欠款单锁定金额"
  lockTotalAmount: BigDecimal
  "销售单号"
  orderCode: String
  "订单id"
  orderId: Int
  "开单人"
  orderUser: String
  "逾期天数"
  overdueDay: Int
  "是否逾期状态"
  overdueStatus: OverdueStatusEnum
  "销售商品信息"
  saleOrderCommodities: [DebtCommoditySkuDetailPayload]
  "销售时间"
  saleTime: Long
}

"客户欠款详情分页返回结果"
type CustomerDebtDetailPagePayload {
  "当前页码"
  pageCurrent: Int
  "每页显示条数"
  pageSize: Int
  "分页数据集合"
  records: [CustomerDebtDetailListPayload]
  "总条数"
  totalRecords: Long
}

"客户详情返回"
type CustomerDetailPayload {
  "客户别名"
  alias: String
  " 客户姓名拼音"
  allLetter: String
  " 客户属性  (1:内部, 2:外部);"
  attribute: AttributeTypeEnum
  " 所属组织名称"
  belongOrganizationId: Int
  " 所属组织id"
  belongOrganizationName: String
  " 法人"
  corporation: String
  " 创建时间"
  createTime: Long
  " 客户联系人"
  customerContacts: [CustomerContactPayLoad]
  " 业务系统客户id"
  customerDetailId: Int
  " 客户资质"
  customerQualification: CustomerQualificationPayload
  "客户关联用户id"
  customerUserId: Int
  " 客户状态 1启用；99：禁用"
  enable: Int
  " 客户证明资料"
  fileRecord: [FileRecordPayload]
  " 财务系统编码"
  financialSystemCode: String
  " 客户姓名首字母"
  firstLetter: String
  "客户id"
  id: Int
  " 客户身份证号"
  idNumber: String
  "客户名称"
  name: String
  "客户电话"
  phone: String
  " 备注"
  remark: String
  " 是否签订协议合同 1.是 0.否"
  signAgreement: Int
  " 纳税人识别号"
  taxpayerIdentificationNumber: String
  "客户类型(1:个人，2：公司，3：零售)"
  type: CustomerType
  "客户在职状态"
  userStatus: UserStatusEnum
}

" 客户维度统计对象 "
type CustomerDimensionStatisticsPayLoad {
  " 欠款金额 "
  creditAmount: BigDecimal
  " 欠款：销售金额占比 "
  creditSalesProportion: BigDecimal
  " 欠款：欠款总额占比 "
  creditTotalProportion: BigDecimal
  " 销售金额 "
  salesTotalAmount: BigDecimal
}

type CustomerGroupPayload {
  " 客户分组"
  data: [CustomerListPayload]
  " 首字母"
  firstLetter: String
}

type CustomerInfoPayload {
  " 客户别名"
  alias: String
  " 客户属性"
  attribute: AttributeTypeEnum
  " 可用额度"
  availableAmount: BigDecimal
  " 授信额度"
  creditLine: BigDecimal
  " 账期"
  creditPeriod: Int
  " 授信状态"
  creditPeriodStatusEnum: CreditPeriodStatusEnum
  " 公司客户联系人"
  customerContact: [CustomerContact]
  " 客户id"
  id: ID
  " 客户名称"
  name: String
  " 逾期天数 -2即将逾期 大于0已逾期"
  overdueDay: Int
  " 客户电话"
  phone: String
  " 是否签订协议合同 1.是 0.否"
  signAgreement: Int
  " 客户类型"
  type: CustomerType
}

"客户列表返回"
type CustomerListPayload {
  "客户别名"
  alias: String
  " 客户姓名拼音"
  allLetter: String
  " 客户属性"
  attribute: AttributeTypeEnum
  " 可用额度"
  availableAmount: BigDecimal
  " 所属组织id"
  belongOrganizationId: Int
  "客户渠道id 合同客户标签根据此字段判断(204)"
  channelId: Int
  "渠道名称 合同客户标签根据此字段判断(合同)"
  channelName: String
  " 法人"
  corporation: String
  " 创建时间"
  createTime: Long
  " 授信额度"
  creditLine: BigDecimal
  " 账期"
  creditPeriod: Int
  " 授信状态"
  creditPeriodStatusEnum: CreditPeriodStatusEnum
  " 公司客户联系人"
  customerContact: [CustomerContact]
  " 业务系统客户id"
  customerDetailId: Int
  "关联用户id"
  customerUserId: Int
  " 客户状态 1启用；99：禁用"
  enable: Int
  " 财务系统编码"
  financialSystemCode: String
  " 客户姓名首字母"
  firstLetter: String
  "客户id"
  id: Int
  " 客户身份证号"
  idNumber: String
  "客户名称"
  name: String
  " 逾期天数 -2即将逾期 大于0已逾期"
  overdueDay: Int
  "客户电话"
  phone: String
  " 是否签订协议合同 1.是 0.否"
  signAgreement: Int
  " 纳税人识别号"
  taxpayerIdentificationNumber: String
  "客户类型(1:个人，2：公司，3：零售)"
  type: CustomerType
  "客户在职状态"
  userStatus: UserStatusEnum
}

type CustomerNameAndIdNumberPayload {
  " 客户身份证号"
  idNumber: String
  " 客户姓名"
  name: String
}

type CustomerPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [CustomerListPayload]
  totalRecords: Long
}

"客户资质详情"
type CustomerQualificationPayload {
  " 资产说明"
  assetDescription: String
  " 经营情况说明"
  businessCondition: String
  " 经营时长"
  businessDuration: BusinessDuration
  " 经营规模"
  businessScale: BusinessScale
  " 经营类型"
  businessTypes: [QualificationBusinessType]
  " 客户详情Id"
  customerDetailId: Int
  " 资质证明文件"
  files: [FilePayload]
  " 主键"
  id: Int
  " 是否长期合作 1.是 0.否"
  longTermCooperation: Int
  " 日常拿货情况说明"
  purchaseCondition: String
  " 销售渠道说明"
  salesChannels: String
  " 是否签订协议合同 1.是 0.否"
  signAgreement: Int
  " 其他经营类型说明"
  typeRemark: String
}

type DataTreeNode {
  "子节点"
  children: [DataTreeNode]
  "禁用"
  disabled: Boolean
  "节点值TYPE_ID"
  key: String
  "父节点值"
  parentId: String
  "名称"
  title: String
}

type DataTreePayload {
  nodes: [DataTreeNode]
}

type DebitFormPayload {
  "欠款单id"
  debitFormId: ID
  " 欠款金额"
  debitMoney: BigDecimal
  "欠款单锁定金额"
  lockTotalAmount: BigDecimal
  " 欠款单号"
  orderCode: String
  " 订单id"
  orderId: ID
  " 回款金额"
  paymentMoney: BigDecimal
  " 销售日期"
  salesDate: Long
}

"欠款商品明细对象"
type DebtCommodityDetailPayload {
  "商品sku明细"
  commoditySkuDetail: [commoditySkuDetailPayload]
  "商品skuId"
  commoditySkuId: Int
  "商品SKU名称"
  commoditySkuName: String
}

"欠款商品明细对象"
type DebtCommodityInfoPayload {
  "实收金额"
  actuallyReceiveAmount: BigDecimal
  "商品总额"
  commodityTotalAmount: BigDecimal
  "欠款商品明细"
  debtCommodityDetail: [DebtCommodityDetailPayload]
  "欠款支付金额"
  debtPayAmount: BigDecimal
  "优惠金额"
  discountAmount: BigDecimal
}

"欠款商品sku明细展示"
type DebtCommoditySkuDetailPayload {
  "批次id"
  batchId: ID
  "数量"
  quantity: BigDecimal
  "skuId"
  skuId: Int
  "sku名称"
  skuName: String
  "数量单位"
  unitId: Int
  "单价"
  unitPrice: BigDecimal
}

"欠款统计返回对象"
type DebtCountPayload {
  "欠款合计"
  currentDebitTotalAmount: BigDecimal
  "欠款总额"
  debitTotalAmount: BigDecimal
  "欠款客户数量"
  debtCustomerCount: Int
  "欠款客户信息"
  debtCustomerCountList: [DebtListPayload]
}

"欠款客户信息返回"
type DebtCustomerInfoPayload {
  "授信编码"
  creditCode: String
  "授信额度"
  creditLine: BigDecimal
  "账期"
  creditPeriod: Int
  "客户别名"
  customerAlias: String
  "客户属性"
  customerAttribute: AttributeTypeEnum
  "客户id"
  customerId: Int
  "客户名称"
  customerName: String
  "客户类型"
  customerType: CustomerType
  "客户欠款锁定金额"
  lockTotalCusAmount: BigDecimal
  "客户联系方式(包括公司客户联系人方式)"
  phone: String
  "是否签订协议合同 1.是 0.否"
  signAgreement: Int
}

"欠款信息"
type DebtInfoPayload {
  "欠款单欠款金额"
  debitMoney: BigDecimal
  "欠款单状态"
  debtOrderStatus: DebtOrderStatusEnum
  "欠款单状态描述"
  debtOrderStatusDesc: String
  "欠款单锁定金额"
  lockTotalAmount: BigDecimal
  "销售单号"
  orderCode: String
  "订单id"
  orderId: ID
  "开单人"
  orderUser: String
  "销售时间"
  saleTime: Long
}

"欠款列表对象"
type DebtListPayload {
  "客户欠款总额"
  customerDebitTotalAmount: BigDecimal
  "客户信息"
  customerInfo: DebtCustomerInfoPayload
  "逾期欠款"
  overdueAmount: BigDecimal
  "是否逾期状态"
  overdueStatus: OverdueStatusEnum
}

" 回款情况 "
type DebtMoneyBackInfoPayload {
  " 当前日期下回款情况 "
  moneyBackInfo: [DebtMoneyBackPayLoad]
  " 回款时间 "
  paybackTime: Long
}

type DebtMoneyBackPayLoad {
  " 回款金额 "
  paybackAmount: BigDecimal
  " 支付方式 "
  paymentType: PaymentType
}

" 商品详情 "
type DebtOrderCommodityInfoPayload {
  "商品skuId"
  commoditySkuId: Int
  "商品SKU名称"
  commoditySkuName: String
  "数量"
  quantity: BigDecimal
  "数量单位类型"
  quantityUnitType: Int
}

"欠款单返回对象"
type DebtOrderDetailPayload {
  "商品明细"
  commodityInfos: DebtCommodityInfoPayload
  "客户信息"
  customerInfo: DebtCustomerInfoPayload
  "欠款单号"
  debitFormCode: String
  "欠款单id"
  debitFormId: ID
  "欠款金额"
  debitMoney: BigDecimal
  "欠款信息"
  debtInfo: DebtInfoPayload
  "回款信息"
  moneyBackInfo: MoneyBackInfoPayload
  "逾期天数"
  overdueDay: Int
  "是否逾期状态"
  overdueStatus: OverdueStatusEnum
  "退款信息"
  refundInfo: RefundInfoPayload
}

"欠款分页查询对象"
type DebtPagePayload {
  "当前页码"
  pageCurrent: Int
  "每页显示条数"
  pageSize: Int
  "分页数据集合"
  records: [DebtListPayload]
  "总条数"
  totalRecords: Long
}

" 详情返回对象"
type DetailPayload {
  " 基本信息"
  basicInfo: BasicInfo
  " 退货证明"
  pictureInfo: [PictureInfoPayload]
  "关联订单信息"
  relationOrderInfo: RelationOrderInfo
  " 退货订单信息"
  returnOrderInfo: ReturnOrderInfo
}

"下载出参"
type DownloadPayload {
  " 下载链接地址"
  downloadFileUrl: String
}

"通用文件"
type FilePayload {
  "文件ID"
  fileId: String
  "文件上传时间 GMT+8 yyyy-MM-dd HH:mm:ss"
  fileUploadTime: Long
  "文件地址"
  fileUrl: String
  "文件名称"
  filename: String
}

type FileRecordPayload {
  " 文件类型"
  fileType: FileType
  " 文件列表"
  files: [FilePayload]
}

" 调拨费用单详情"
type FlowTransferCostPayload {
  " 调拨费用单状态"
  allocateCostStatus: AllocateCostStatus
  " 调出人"
  allocateOutUser: String
  " 未聚合商品信息"
  commodityDetail: [AllocateCommodityDetailPayload]
  " 运杂费单号"
  costCode: String
  " 运杂款合计"
  costTotalAmount: BigDecimal
  " 是否已提交财务"
  financeSubmitted: Boolean
  " 调拨费用单id"
  flowCostId: ID
  " 调拨单id"
  flowId: ID
  " 入库审核人"
  flowInStockAuditUser: String
  " 调入方运杂费详情"
  inCostInformationDetail: [CostInformationDetailPayload]
  " 调入方运杂款合计"
  inCostTotalAmount: BigDecimal
  " 调入组织id"
  orgInId: Int
  " 调入组织名称"
  orgInName: String
  " 调出组织id"
  orgOutId: Int
  " 调出组织名称"
  orgOutName: String
  " 调出方合计金额"
  outAllocatedTotalAmount: BigDecimal
  " 调出方运杂费详情"
  outCostInformationDetail: [CostInformationDetailPayload]
  " 调出方运杂款合计"
  outCostTotalAmount: BigDecimal
  " 备注"
  remark: String
  " 订单状态"
  status: AllocateStatus
  " 入库时间"
  stockInTime: Long
  " 出库时间"
  stockOutTime: Long
  " 出/入库单号"
  stockRecordCode: String
  " 出库记录主键Id"
  stockRecordId: ID
  " 出入库类型"
  stockRecordType: StockRecordType
  " 货款金额合计"
  totalAmount: BigDecimal
  " 调拨单号"
  transferCode: String
  " 聚合后商品信息"
  warehouseCommodityDetail: [AllocateWarehouseCommodityDetailPayload]
}

type IdsPayload {
  ids: [Int]
}

type KeysPayload {
  keys: [String]
}

" 盘点仓库下商品库存信息"
type ListCheckStockBatchListPayload {
  categoryRecords: [ListCheckStockBatchPayload]
}

" 盘点仓库下商品库存信息"
type ListCheckStockBatchPayload {
  " 商品品类ID"
  commodityCategoryId: Int
  " 商品品类名称"
  commodityCategoryName: String
  " 商品品类下sku库存详情信息"
  skuRecords: [CheckStockBatchSkuPayload]
  " 商品品类锁定库存总量"
  totalLockQuantity: [StockQuantityUnit]
  " 商品品类库存总量"
  totalStockQuantity: [StockQuantityUnit]
}

" 品类名称集合"
type ListCommodityCategoryPayload {
  records: [CommodityCategoryPayload]
}

type ListCommoditySpecsPayload {
  commoditySpec: [CommoditySpecsPayload]
  skuOption: [SkuOptionPayload]
}

" Spu集合"
type ListCommoditySpuPayload {
  records: [CommoditySpuPayload]
}

type ListControlCommodityCategoryPayload {
  records: [ControlCommodityCategoryPayload]
}

type ListControlCommoditySkuPayload {
  records: [ControlCommoditySkuPayload]
}

"""
 --------------- 出参 -------------
 列表获取费用类型返回信息
"""
type ListCostTypePayload {
  " 费用类型集合"
  costTypeResp: [CostTypePayload]
}

type ListRecommendTagPayload {
  " 推荐标签名 "
  tagNameList: [String]
}

" 库存信息"
type ListStockBatchListPayload {
  records: [StockBatchSkuPayload]
}

" 账号登陆返回"
type LoginByAccountPayload {
  " 是否需要更新密码"
  needUpdatePassword: Boolean
  " 登陆令牌"
  token: String
}

"团队成员分页信息"
type MemberPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [MemberPayload]
  totalRecords: Int
}

type MemberPayload {
  "团队成员id"
  id: Int
  "名称"
  name: String
  " 联系方式"
  phone: String
  "角色ID"
  roleIds: [Int]
  "角色名称"
  roleNames: [String]
}

" 商户下欠款客户情况 "
type MerchantCustomerCreditInfoPayload {
  " 当前页码 "
  pageCurrent: Int
  " 每页显示条数 "
  pageSize: Int
  " 商户下客户欠款列表 "
  records: [MerchantCustomerCreditPayload]
  " 总条数 "
  totalRecords: Long
}

" 商户下欠款客户列表对象 "
type MerchantCustomerCreditPayload {
  "授信额度"
  creditLine: BigDecimal
  "授信账期"
  creditPeriod: Int
  " 欠款总额 "
  creditTotalAmount: BigDecimal
  " 客户属性 "
  customerAttribute: AttributeTypeEnum
  " 客户id "
  customerId: Long
  " 客户名称 "
  customerName: String
  " 客户类型 "
  customerType: CustomerType
  " 当前最近的一次客户授权禁用填写的原因 "
  disableRemarks: String
  " 最早欠款日期 "
  earliestOverdueDate: Long
  " 取当前最近的一次客户授权启用填写的原因 "
  enableRemarks: String
  " 财务系统编码 "
  financialSystemCode: String
  " 操作人 "
  operatorName: String
  " 取最近的客户授信内容编辑并保存的时间 "
  operatorTime: Long
  "逾期天数，负数表示没有逾期,正数表示逾期天数，null表示没有对应的欠款单"
  overdueDay: String
  " 逾期欠款总额 "
  overdueTotalAmount: BigDecimal
  " 使用状态(1：启用，99：禁用) "
  useStatus: Int
}

"商户统计返回结果"
type MerchantDebtTotalPayload {
  " 总欠款金额 "
  debtTotal: BigDecimal
  " 当前商户名称 "
  orgName: String
}

type MerchantOptionPayload {
  option: [Option]
}

type MerchantPayload {
  " 商户id"
  id: Int
  " 商户名称"
  name: String
  " 用户组id"
  orgGroupId: Int
  " 用户组名称"
  orgGroupName: String
  " 组织id"
  orgId: Int
  " 组织名称"
  orgName: String
  " 商户电话"
  phone: String
  " 用户id"
  userId: Int
  " 用户名称"
  userName: String
}

" 运杂费对象"
type MiscellaneousFreightPayload {
  " 运费类型"
  costName: String
  " 运费金额"
  costPrice: BigDecimal
  " 供应商"
  costSupplier: String
  " 供应商id"
  costSupplierId: Int
  " 费用类型id"
  costTypeId: Long
  " 付款方式"
  payMode: PayMode
  " 备注"
  remark: String
}

"回款信息"
type MoneyBackInfoPayload {
  "回款明细"
  moneyBackDetail: [MoneyDetailPayload]
  "回款总金额"
  totalAmount: BigDecimal
}

"回款/退款明细对象"
type MoneyDetailPayload {
  "金额"
  amount: BigDecimal
  "时间"
  operateTime: Long
  "操作人"
  operateUser: String
  "操作人id"
  operateUserId: Int
}

type Mutation {
  " 审核通过订单退货"
  AuditReturnCommodity(input: ReturnOrderIdInput): Int
  "异常销售订单确认"
  abnormalSalesOrderConfirmed(input: AbnormalSalesOrderConfirmedInput): Boolean
  " 调拨费用单财务完成审核"
  allocateCostApproval(input: ID!): Boolean
  "回款审核: 审核通过回款单"
  approvePayment(input: ChangePaymentStatusInput!): Boolean
  " 报损信息图片打包下载"
  breakagePackageDownload(input: PackageDownloadInput): PackageDownloadPayload
  " 取消调拨"
  cancelAllocate(input: AllocateCancelInput): Int
  " 订单取消"
  cancelOrder(input: OrderIdInput!): Int
  "回款录入: 取消回款单"
  cancelPayment(input: ChangePaymentStatusInput!): Boolean
  " 取消订单"
  cancelPurchaseOrder(input: PurchaseOrderCancelInput): Int
  " 取消待提货订单"
  cancelUnpickOrder(input: OrderIdInput!): Int
  "仓库：启用/禁用仓库"
  changeWarehouseStat(input: ChangeWarehouseStatInput!): Boolean
  "检测角色名称重复"
  checkRoleName(input: CheckRoleNameInput): CheckPayload
  " 供应商名称/简称/联系电话校验接口"
  checkSupplier(input: SupplierCheckInput): SupplierCheckPayload
  " 校验手机号码是否存在"
  checkUserExist(input: CheckUserInput): Boolean
  "销售指导价：确认销售指导价"
  confirmCommodityGuidePrice(input: ConfirmCommodityGuidePriceInput!): Boolean
  "回款录入: 创建回款单"
  creatPayment(input: CreatPaymentInput!): ID
  " 调拨"
  createAllocate(input: AllocateInput): AllocatePayload
  "  确认入库(申请)"
  createApplyEntryWareHouse(input: ConfirmEntryInput): Int
  " 新增出库"
  createComeWareHouse(input: ComeWareHouseInput): StockOutPayload
  "客户:创建客户"
  createCustomer(input: CreateCustomerInput!): Int
  "客户:创建客户联系人"
  createCustomerContact(input: CustomerContactInput): Boolean
  "客户:新增客户授信"
  createCustomerCredit(input: CustomerCreditCreateInput): CustomerCreditCreatePayload
  "客户:创建客户资质"
  createCustomerQualification(input: CustomerQualificationInput!): Boolean
  " 新增入库"
  createEntryWareHouse(input: EntryWareHouseInput): Int
  "创建团队成员"
  createMember(input: CreateMemberInput): Boolean
  " 创建订单"
  createOrder(input: WholesaleOrderCreateInput): CreateOrderPayload
  " 驳回入库申请"
  createRejectApply(input: RejectApplyInput): Int
  "新增角色"
  createRole(input: CreateRoleInput): Boolean
  " 添加购物车"
  createShoppingCar(input: ShoppingCarCreateInput): Int
  " 盘点暂存"
  createStockTemporary(input: StockTemporaryInput): Int
  " 完成盘点"
  createTakeStock(input: TakeStockDetailInput): TakeStockCreatePayload
  "仓库：新增仓库"
  createWarehouse(input: WarehouseCreateInput!): ID
  "客户:删除客户联系人"
  deleteCustomerContact(input: DeleteCustomerContactInput): Boolean
  "删除购物车记录"
  deleteShoppingCar(input: ShoppingCarDeletedInput!): Int
  "客户:启用/禁用客户授信"
  editCreditEnableStatus(input: CreditEnableStatusInput): Boolean
  "客户:编辑客户"
  editCustomer(input: CustomerEditInput): Int
  "客户:编辑客户授信"
  editCustomerCredit(input: CustomerCreditEditInput): Boolean
  "客户:启用/禁用客户"
  enableOrDisableCustomer(input: EnableOrDisableCustomerInput!): Boolean
  "启用/禁用小票"
  enableSmallTicket(input: TicketEnableInput): TicketEnablePayload
  " 采购费用单编辑接口"
  financialAuditPurchaseOrder(input: PurchaseCostUpdateInput): Boolean
  "客户:暂存客户资质"
  holdCustomerQualification(input: CustomerQualificationInput!): Boolean
  " 新增采购订单"
  insertPurchaseOrder(input: PurchaseOrderInsertInput): PurchaseOrderInsertPayload
  " 新增供应商"
  insertSupplier(input: SupplierInsertInput): Int
  "客户:判断输入条件是否已存在"
  judgeCustomerExist(input: ExistConditionInput): Boolean
  " 修改支付方式"
  modifyPaymentMethod(input: ModifyPaymentInput): Int
  " 订单提货-部分提货"
  partPickOrder(input: OrderPartPickInput): Boolean
  " 订单收银"
  paymentOrder(input: OrderPaymentInput): Int
  " 订单提货"
  pickOrder(input: OrderIdInput!): Int
  " 采购费用单财务完成审核"
  purchaseCostCostApproval(input: ID!): Boolean
  "刷新token"
  refreshToken: String
  "回款审核: 驳回回款单"
  rejectPayment(input: ChangePaymentStatusInput!): Boolean
  " 驳回订单退货"
  rejectReturnCommodity(input: ReturnOrderIdInput): Int
  "删除团队成员"
  removeMember(input: MemberIdInput): Boolean
  " 订单退货"
  returnCommodity(input: ReturnOrderInput): Int
  " 退货证明打包下载"
  returnOrderProvePackageDownload(input: DownloadInput): DownloadPayload
  "销售指导价：设置销售指导价"
  setCommodityGuidePrice(input: SetCommodityGuidePriceInput!): Boolean
  " 调拨费用单提交财务"
  submitAllocateToFinance(input: ID!): Boolean
  "回款录入: 提交回款单"
  submitPayment(input: ChangePaymentStatusInput!): Boolean
  " 采购费用管理提交"
  submitPurchaseCost(input: PurchaseCostSubmitInput): Boolean
  " 提交订单"
  submitPurchaseOrder(input: PurchaseOrderSubmitInput): Int
  " 修改调拨运杂费"
  updateAllocateCostInfo(input: UpdateCostInformationInput): Boolean
  updateCommodityAlias(input: CommodityAliasUpdateInput): Int
  "客户:更新客户联系人"
  updateCustomerContact(input: CustomerContactInput): Boolean
  "客户:编辑客户资质"
  updateCustomerQualification(input: CustomerQualificationInput!): Boolean
  "数据授权"
  updateDataRel(input: UpdateDataRelInput): Boolean
  "修改团队成员"
  updateMember(input: UpdateMemberInput): Boolean
  " 修改密码"
  updatePassword(input: UpdatePasswordInput): Boolean
  "回款录入: 编辑回款单"
  updatePayment(input: UpdatePaymentInput!): Boolean
  "功能授权"
  updatePowerRel(input: UpdatePowerRelInput): Boolean
  " 采购费用管理修改"
  updatePurchaseCost(input: PurchaseCostUpdateInput): Boolean
  " 修改采购订单"
  updatePurchaseOrder(input: PurchaseOrderUpdateInput): Int
  "编辑角色"
  updateRole(input: UpdateRoleInput): Boolean
  " 编辑购物车"
  updateShoppingCar(input: ShoppingCarUpdateInput!): Int
  " 更新供应商"
  updateSupplier(input: SupplierInsertInput): Boolean
  "仓库：编辑仓库"
  updateWarehouse(input: WarehouseUpdateInput!): ID
}

" 原支付方式"
type OldOrderPaymentPayload {
  " 订单支付信息"
  orderPayments: [OrderPaymentPayload]
  " 修改原因"
  reason: String
}

type Option {
  label: String
  value: Int
}

type Option2 {
  label: String
  value: String
}

type OptionList {
  options: [BaseSelectOption]
}

" 订单调整"
type OrderAdjustment {
  " 取消订单原因"
  cancelOrderReason: String
  " 取消人"
  cancellerName: String
  " 操作人"
  operatorName: String
  " 原付款详情"
  paymentDetail: [PaymentInfo]
  " 修改支付方式原因"
  paymentMethodModifyReason: String
}

type OrderBillCommodityDetailPayload {
  " Sku价格总和"
  commoditySkuAmount: BigDecimal
  " SKUID"
  commoditySkuId: Int
  " 商品SKU名称"
  commoditySkuName: String
  " 商品总件数"
  commoditySkuQuantity: BigDecimal
  "数量单价类型"
  quantityUnitType: Int
  " 商品SKU单价"
  unitPrice: BigDecimal
}

type OrderBillCommodityPayload {
  carNo: String
  commodityDetail: [OrderBillCommodityDetailPayload]
  trailerCarNo: String
  warehouseName: String
}

type OrderBillPayload {
  " 收银备注"
  cashRemark: String
  " 收银员"
  cashierName: String
  " 客户名称"
  customerName: String
  " 优惠金额"
  discountAmount: BigDecimal
  " 订单号"
  orderCode: String
  " 订单商品信息"
  orderCommodities: [OrderBillCommodityPayload]
  " 订单ID"
  orderId: Int
  " 开单人"
  orderOperation: String
  " 订单支付方式"
  orderPayments: [OrderPaymentPayload]
  " 已付金额"
  paidAmount: BigDecimal
  " 应付金额"
  payableAmount: BigDecimal
  " 付款号"
  paymentCode: String
  " 收银时间"
  paymentTime: Long
  " 订单备注"
  remark: String
  " 订单金额"
  totalAmount: BigDecimal
  " 商品总件数"
  totalQuantity: [SalesNumCount]
}

type OrderCommodityDetailPayload {
  " 批次id"
  batchId: ID
  "换算后的购买数量"
  convertQuantity: BigDecimal
  "换算后的单位类型"
  convertQuantityUnitType: Int
  " 入库时间"
  enterTime: Long
  "指导价"
  guidePrice: String
  "标签id"
  labelIdList: [String]
  " 提货记录"
  pickRecord: [PickInfo]
  " 购买数量"
  quantity: BigDecimal!
  "数量单价类型"
  quantityUnitType: Int
  " 小计"
  skuTotalAmount: BigDecimal
  " 待提货数量"
  toPickQuantity: BigDecimal
  " 单价"
  unitPrice: BigDecimal!
  " 仓库名称"
  warehouseName: String
}

" 订单商品明细"
type OrderCommodityListPayload {
  " 商品别名"
  commodityAlias: String
  " 数量"
  commoditySkuCount: BigDecimal
  " skuId"
  commoditySkuId: Int
  " 换算数量"
  convertQuantity: BigDecimal
  " 换算单位Id"
  convertUnitId: Int
  " 优惠后的单价"
  discountUnitPrice: BigDecimal
  " 原始批次号"
  originalBatchCode: String
  " 原始批次号"
  originalBatchId: ID
  " 销售金额"
  payableAmount: BigDecimal
  " 单位Id"
  unitId: Int
}

type OrderCommodityPayload {
  " Sku价格总和"
  commoditySkuAmount: BigDecimal
  " sku数量"
  commoditySkuCount: Int
  " SKUID"
  commoditySkuId: Int
  " 商品SKU名称"
  commoditySkuName: String
  " 商品总件数"
  commoditySkuQuantity: BigDecimal
  " 购买数量"
  orderCommodityDetails: [OrderCommodityDetailPayload]
  "单位转换关系"
  unitConversion: UnitConversion
}

type OrderDetailPayload {
  "异常订单确认状态"
  abnormalOrderStatus: AbnormalSalesOrderStatus
  " 是否可以修改支付方式"
  canEditPaymentMethod: Boolean
  " 取消人"
  cancelOperation: String
  " 订单取消原因"
  cancelReason: String
  " 订单取消时间"
  cancelTime: Long
  " 收银备注"
  cashRemark: String
  " 收银人"
  cashierName: String
  " 订单完成时间"
  completeTime: Long
  " 客户信息"
  customerInfo: CustomerInfoPayload
  " 优惠金额"
  discountAmount: BigDecimal
  " 原支付方式"
  oldOrderPayments: OldOrderPaymentPayload
  "操作记录"
  operateRecord: [OrderOperateRecord]
  " 过期时间"
  orderCancelHour: Int
  " 订单号"
  orderCode: String
  " 订单商品信息"
  orderCommodities: [OrderCommodityPayload]
  " 订单ID"
  orderId: Int
  " 开单人"
  orderOperation: String
  " 订单支付信息"
  orderPayments: [OrderPaymentPayload]
  " 开单时间"
  orderTime: Long
  " 已付金额"
  paidAmount: BigDecimal
  " 应付金额"
  payableAmount: BigDecimal
  " 付款号"
  paymentCode: String
  " 支付时间"
  paymentTime: Long
  " 预支付方式"
  prePaymentType: [PaymentType]
  " 备注"
  remark: String
  " 订单状态"
  status: OrderStatus
  " 订单状态中文描述"
  statusDesc: String
  " 订单金额"
  totalAmount: BigDecimal
}

type OrderInfoPayLoad {
  " 客户id"
  customerId: Int
  " 客户名称"
  customerName: String
  " 销售订单号"
  orderCode: String
  " 订单ID"
  orderId: Int
  " 开单时间"
  orderTime: Long
  " 实收金额"
  paidAmount: BigDecimal
  " 支付方式"
  paymentType: [PaymentType]
}

type OrderListByCustomerPayload {
  " 商品信息"
  commodityDetail: [CommodityInfoPayload]
  " 客户名称"
  customerName: String
  " 订单ID"
  orderId: Int
  " 开单时间"
  orderTime: Long
  " 实收金额"
  paidAmount: BigDecimal
  " 支付方式"
  paymentType: [PaymentType]
}

type OrderListPayload {
  " 订单取消时间"
  cancelTime: Long
  " 取消人"
  canceler: String
  " 收银人"
  cashierName: String
  " SKU名称"
  commodityDetail: [OrderListSkuInfo]
  " SKU名称"
  commoditySkuNames: [String]
  " 客户别名"
  customerAlias: String
  " 客户电话"
  customerMobile: String
  " 客户名称"
  customerName: String
  " 客户名称"
  customerType: Int
  " 客户类型"
  customerTypeDesc: String
  " 订单完成时间"
  orderCompleteTime: Long
  " 订单ID"
  orderId: Int
  " 开单人"
  orderOperation: String
  " 订单支付时间"
  orderPaymentTime: Long
  " 下单时间"
  orderTime: Long
  " 已付金额"
  paidAmount: BigDecimal
  " 付款号"
  paymentCode: String
  " 采购员别名"
  purchaseAlias: String
  " 采购员名称"
  purchaseName: String
  " 订单状态"
  status: OrderStatus
  " 订单状态中文描述"
  statusDesc: String
  " 订单总金额"
  totalAmount: BigDecimal
}

type OrderListSkuInfo {
  "sku 数量单位"
  quantityUnitType: Int
  " sku ID"
  skuId: Int
  " sku 名称"
  skuName: String
  " sku 数量"
  skuQuantity: BigDecimal
  " sku 单价"
  skuUnitPrice: BigDecimal
}

"订单操作记录"
type OrderOperateRecord {
  " 操作人"
  operatorName: String
  " 操作时间"
  operatorTime: Long
  " 流程类型"
  orderProcessType: SaleOrderProcessType
}

type OrderPageByCustomerPayload {
  pageCurrent: Int
  pageSize: Int
  records: [OrderListByCustomerPayload]
  totalRecords: Long
}

type OrderPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [OrderListPayload]
  totalRecords: Long
}

" 订单收银统计出参"
type OrderPaymentCountPayload {
  "收银支付方式统计"
  paymentMethodCountList: [PaymentMethodCountPayload]
  " 收银总金额"
  totalAmount: BigDecimal
  " 收银总数量"
  totalQuantity: Int
}

" 订单支付信息"
type OrderPaymentPayload {
  " 实收金额"
  paidAmount: BigDecimal
  " 订单支付方式"
  paymentType: PaymentType
}

type OrderPaymentStatusPayload {
  msg: String
  status: Boolean
}

" 订单流程"
type OrderProcessInfo {
  " 操作人"
  operatorName: String
  " 操作时间"
  operatorTime: Long
  " 流程类型"
  orderProcessType: OrderProcessType
}

" 订单明细返回"
type OrderReportFormDetailPayload {
  " 基本信息"
  baseInfo: BaseInfo
  " 消费信息"
  consumeInfo: ConsumeInfo
  " 订单调整"
  orderAdjustment: OrderAdjustment
  " 订单流程"
  orderProcessInfo: [OrderProcessInfo]
}

" 列表集合对象"
type OrderReportFormListPayload {
  " 支付宝金额"
  alipayMoney: BigDecimal
  " 开单时间"
  billingTime: Long
  " 现金支付金额"
  cashMoney: BigDecimal
  " 收银备注"
  cashRemark: String
  " 收银员"
  cashierName: String
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: String
  " 优惠金额"
  discountMoney: BigDecimal
  " 内部欠款"
  externalArrearsMoney: BigDecimal
  " 主键"
  id: Long
  " 内部欠款"
  internalArrearsMoney: BigDecimal
  " 原支付方式"
  oldPayMethod: [String]
  " 订单号"
  orderCode: String
  " 支付方式"
  payMethod: [String]
  " 支付时间"
  payTime: Long
  " 商品及数量"
  productAndCount: [ProductObj]
  " 实收金额"
  receivableMoney: BigDecimal
  " 关联退货订单信息"
  relationReturnOrderInfo: [RelationReturnOrderInfo]
  " 订单备注"
  remark: String
  " 销售员"
  salesmanName: String
  "订单查询状态"
  status: OrderReportQueryStatus
  "订单状态"
  statusDesc: String
  " 刷卡"
  swipeMoney: BigDecimal
  " 应收金额"
  totalMoney: BigDecimal
  " 总数量"
  totalQuantity: BigDecimal
  " 转账"
  transferAccountsMoney: BigDecimal
  " 微信金额"
  wechatMoney: BigDecimal
}

" 列表分页对象"
type OrderReportFormPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [OrderReportFormListPayload]
  totalRecords: Long
}

type OrderReturnCommodityDetailPayload {
  " 商品信息"
  commodityDetail: [ReturnCommoditySelectPayload]
}

" 用户组织信息"
type OrgInfo {
  "组织群Id"
  orgGroupId: Int
  "组织群名称"
  orgGroupName: String
  "组织id"
  orgId: Int
  "组织名称"
  orgName: String
  "组织父id"
  orgParentId: Int
  "组织父名称"
  orgParentName: String
}

type OrgPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [OrgPayload]
  totalRecords: Long
}

type OrgPayload {
  " 是否禁用"
  disable: Boolean
  " 组织id"
  key: Int
  " 组织名称"
  name: String
}

"获取组织树返回"
type OrgTreeJsonPayload {
  "json数据 格式{key:1,parentId:2,name:\"中国\",children:[]}"
  treeJson: String
}

type OrgTreePayload {
  " 系统id"
  appId: Int
  " 子节点"
  children: [Int]
  " 是否禁用"
  disable: Boolean
  " 组织id"
  key: Int
  " 组织名称"
  name: String
  " 父节点id"
  parentId: Int
}

type OrgUserListPayload {
  orgUserPayload: [OrgUserPayload]
}

" 组织下用户分页对象"
type OrgUserPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [OrgUserPayload]
  totalRecords: Long
}

" 组织用户信息"
type OrgUserPayload {
  "用户组织信息"
  orgInfos: [OrgInfo]
  "联系方式"
  phone: String
  "用户ID"
  userId: Int
  "用户名称"
  userName: String
  "用户状态"
  userStatus: UserStatusEnum
}

" 列表集合对象"
type OutBoundReportFormListPayload {
  " 批次号（溯源批次号）"
  batchStockCode: String
  " 商品sku标准名称"
  commoditySkuName: String
  " 主键"
  id: ID
  " 操作人"
  operatorName: String
  " 出库单号"
  orderCode: String
  " 出库时间"
  outboundTime: Long
  " 出库类型"
  outboundType: String
  " 备注"
  remark: String
  " 状态"
  status: String
  " 出库数量标准商品单位转换"
  stockUnitConversion: StockQuantityUnit
  " 所属仓库"
  warehouseName: String
}

" 列表分页对象"
type OutBoundReportFormPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [OutBoundReportFormListPayload]
  totalRecords: Long
}

" 出库详情商品详细"
type OutCommodityDetailPayload {
  " 车牌号"
  carNo: String
  " 出库商品信息"
  commodityDetail: [CommodityDetailPayload]
  " 挂车号"
  trailerCarNo: String
  " 仓库名称"
  warehouseName: String
}

type PackageDownloadPayload {
  " 下载链接地址"
  downloadFileUrl: String
}

type PageAbnormalSalesOrderPayload {
  pageCurrent: Int
  pageSize: Int
  records: [AbnormalSalesOrderPayload]
  totalRecords: Long
}

type PageAllocateCostPayload {
  " 当前页码"
  pageCurrent: Int
  " 分页条数"
  pageSize: Int
  " 分页数据"
  records: [AllocateCostPayload]
  " 总条数"
  totalRecords: Int
}

type PageAllocateOrderPayload {
  " 当前页码"
  pageCurrent: Long
  " 分页条数"
  pageSize: Long
  " 分页数据"
  records: [AllocateOrderPayload]
  " 总条数"
  totalRecords: Long
}

" 调拨单分页查询结果"
type PageAllocateStockRecordPayload {
  pageCurrent: Int
  pageSize: Int
  records: [AllocateStockRecordPayload]
  totalRecords: Int
}

type PageBreakageRecordPayload {
  pageCurrent: Int
  pageSize: Int
  records: [BreakageRecordPayload]
  totalRecords: Int
}

type PageCreditCustomerPayload {
  pageCurrent: Int
  pageSize: Int
  records: [CreditCustomerPayload]
  totalRecords: Long
}

" 调拨费用单分页查询结果"
type PageFlowTransferCostPayload {
  pageCurrent: Int
  pageSize: Int
  records: [FlowTransferCostPayload]
  totalRecords: Long
}

" 分页返回对象"
type PagePayload {
  " 当前页码"
  pageCurrent: Int
  " 每页显示条数"
  pageSize: Int
  " 数据集合"
  records: [ReturnOrderPayload]
  " 总条数"
  totalRecords: Long
}

type PagePaymentPayload {
  pageCurrent: Int
  pageSize: Int
  records: [PaymentPayload]
  totalRecords: Int
}

" 入库申请返回结果集合"
type PagePeachStockRecordPayload {
  pageCurrent: Int
  pageSize: Int
  records: [PeachStockRecordPayload]
  totalRecords: Int
}

" 报表列表查询返回结果"
type PagePurchaseCostReportPayload {
  pageCurrent: Int
  pageSize: Int
  records: [PurchaseCostReportListPayload]
  totalRecords: Long
}

type PageReturnOrderAuditListPayload {
  pageCurrent: Int
  pageSize: Int
  records: [ReturnOrderAuditListPayload]
  totalRecords: Long
}

type PageRolePayload {
  pageCurrent: Int
  pageSize: Int
  records: [RolePayload]
  totalRecords: Int
}

type PageSupplierPayload {
  pageCurrent: Int
  pageSize: Int
  records: [SupplierPayload]
  totalRecords: Long
}

" 盘点记录列表"
type PageTakeStockRecordListPayload {
  pageCurrent: Int
  pageSize: Int
  records: [TakeStockRecordPayload]
  totalRecords: Int
}

type PaymentChangePayload {
  "变更后状态"
  changeStatus: PaymentStatus
  "操作人ID"
  createBy: Int
  "创建时间"
  createTime: Long
  "操作人姓名"
  creator: String
  "变更前状态"
  initialStatus: PaymentStatus
  "回款单id"
  paymentId: ID
  "备注"
  remarks: String
}

type PaymentContentPayload {
  " 支付金额"
  money: BigDecimal
  " 到账时间"
  paymentTime: Long
  " 支付方式 枚举"
  paymentWayEnum: PaymentType
  " 转账账号"
  transferAccount: String
}

type PaymentCustomer {
  "客户别名"
  alias: String
  "客户属性"
  attribute: AttributeTypeEnum
  "客户id"
  id: Int
  "客户姓名"
  name: String
  "客户类型"
  type: CustomerType
}

" 支付信息"
type PaymentInfo {
  " 支付金额"
  paymentAmount: BigDecimal
  " 支付方式"
  paymentMethod: PaymentType
}

" 收银支付方式统计"
type PaymentMethodCountPayload {
  " 收银金额"
  paymentAmount: BigDecimal
  " 收银数量"
  paymentQuantity: Int
  " 支付方式"
  paymentType: PaymentType
}

type PaymentPayload {
  " 回款单状态"
  auditStatus: PaymentStatus
  " 费用单编码"
  billMainCode: String
  " 费用单id"
  billMainId: ID
  " 回款提交人ID"
  createBy: Int
  " 回款时间"
  createTime: Long
  " 回款提交人姓名"
  creator: String
  " 客户授信编码"
  creditCode: ID
  " 欠款总额"
  creditTotalAmount: BigDecimal
  " 客户信息"
  customer: PaymentCustomer
  " 客户id"
  customerId: Int
  " 回款单对应的欠款单信息"
  debitFormsList: [DebitFormPayload]
  " 欠款锁定总金额"
  lockTotalAmount: BigDecimal
  " 回款单审核记录"
  paymentChangesList: [PaymentChangePayload]
  " 回款单号"
  paymentCode: String
  " 支付信息"
  paymentContentsList: [PaymentContentPayload]
  "回款单id"
  paymentId: ID
  " 回款总金额"
  paymentTotal: BigDecimal
  " 备注"
  remarks: String
  " 回款规则 1:总欠款自动回款， 2:指定欠款回款"
  settleRule: SettleRuleEnum
  " 证明资料"
  supportingMaterialsList: [FilePayload]
}

type PaymentStatusCountPayload {
  " 回款单数量"
  count: Int
  " 回款单状态"
  paymentStatus: PaymentStatus
}

type PeachSkuChangeEvent {
  " 品类ID"
  commodityCategoryId: Int
  " 品类名称"
  commodityCategoryName: String
  " skuId"
  commoditySkuId: Int
  " sku名称"
  commoditySkuName: String
  " 变更类型1：增加，0：减少"
  type: Int
}

" 批发系统出入库记录信息"
type PeachStockRecordPayload {
  " 调拨时间-调出组织出库时间"
  allocateOutDeliveryTime: Long
  " 调出组织"
  allocateOutOrganization: String
  " 出库记录取消标记"
  cancelRemark: Boolean
  " 入/出(商品信息)"
  commodityInfo: String
  " 商品品类"
  commoditySort: String
  " 数据来源"
  dataFrom: String
  " 入库类型"
  entryType: WarehouseAllType
  " 调拨单id"
  flowId: ID
  " 入/出操作人"
  operator: String
  " 入库/出库单号"
  orderCode: String
  " 申请订单id"
  orderId: ID
  " 供应商"
  provider: String
  " 备注"
  remark: String
  " 商品数量"
  size: Int
  " 退货人"
  sponsorName: String
  " 出入库记录主键Id"
  stockRecordId: ID
  " 入库/出库 时间"
  time: Long
  " 仓库名称"
  warehouseName: String
}

" 提货信息"
type PickInfo {
  " 提货数量"
  pickQuantity: BigDecimal
  " 提货时间"
  pickTime: Long
}

" 图片信息"
type PictureInfoPayload {
  fileCreateTime: Long
  fileId: String
  fileName: String
  fileUrl: String
}

type ProductObj {
  productName: String
  quantity: BigDecimal
  unit: String
}

" 采购商品明细"
type PurchaseCommodityDetail {
  " 单价"
  actualPrice: BigDecimal
  " 商品SKU Id"
  commoditySkuId: Int
  " 商品SKU  名称"
  commoditySkuName: String
  " 成本单价"
  costPrice: BigDecimal
  " 单价单位Id"
  priceUnitId: Int
  " 数量"
  quantity: BigDecimal
  " 单品小计"
  subtotal: BigDecimal
  " 数量单位Id"
  unitId: Int
}

" 采购费用管理分页查询结果"
type PurchaseCostPagePayload {
  " 当前页码"
  pageCurrent: Int
  " 每页显示条数"
  pageSize: Int
  " 返回记录集合"
  records: [PurchaseCostPayLoad]
  " 总条数"
  totalRecords: Int
}

" 采购费用返回对象"
type PurchaseCostPayLoad {
  " 费用单ID"
  billId: ID
  " 采购商品信息"
  commodityList: [PurchaseOrderCommodityPayload]
  " 入库时间"
  inWarehouseTime: Long
  " 采购人"
  purchaseName: String
  " 采购订单code"
  purchaseOrderCode: String
  " 采购时间"
  purchaseOrderTime: Long
  " 入库审核人"
  reviewUserName: String
  " 采购费用订单状态"
  status: CostStatusEnum
}

" 列表信息"
type PurchaseCostReportListPayload {
  " 运杂费合计"
  costPrice: BigDecimal
  " 采购货款合计"
  goodPrice: BigDecimal
  " 采购杂运费"
  miscellaneousFreight: [MiscellaneousFreightPayload]
  " 采购成本"
  purchaseCost: BigDecimal
  " 采购运杂费单号"
  purchaseCostCode: String
  " 采购费用id"
  purchaseCostId: ID
  " 关联采购单号"
  purchaseOrderCode: String
  " 采购订单id"
  purchaseOrderId: ID
  " 采购人"
  purchaserUserName: String
  " 复核人-提交财务的操作人"
  reviewUserName: String
  " 费用单状态"
  status: BillStatusEnum
  " 提交时间"
  submitTime: Long
  " 入库审核人"
  submitUserName: String
}

" 采购订单按订单状态统计结果"
type PurchaseOrderByStatusCountPayload {
  " 已完成订单数"
  completedNum: Int
  " 待提交订单数"
  toSubmittedNum: Int
  " 待入库订单数"
  toWarehousedNum: Int
}

" 采购订单商品信息返回结果"
type PurchaseOrderCommodityPayload {
  " 商品SKU ID"
  commoditySkuId: Int
  " 商品 skuName"
  commoditySkuName: String
  " 换算数量"
  convertQuantity: BigDecimal
  " 换算单位Id"
  convertUnitId: Int
  " 商品数量"
  quantity: BigDecimal
  " 单品小计"
  subtotal: BigDecimal
  "单位换算对象"
  unitConversion: UnitConversion
  " 单位Id"
  unitId: Int
  " 商品单价"
  unitPrice: BigDecimal
}

" 采购费用详情接口"
type PurchaseOrderCostDetailPayload {
  " 采购商品明细"
  commodityDetail: [PurchaseOrderCommodityPayload]
  " 采购订单采购总金额"
  commodityTotalAmount: BigDecimal
  " 运杂费合计"
  freightTotalAmount: BigDecimal
  " 果款合计"
  fruitTotalAmount: BigDecimal
  " 采购杂运费"
  miscellaneousFreight: [MiscellaneousFreightPayload]
  " 采购订单编号"
  orderCode: String
  " 订单完成时间(入库时间)"
  orderCompleteTime: Long
  " 订单创建时间(采购时间)"
  orderCreateTime: Long
  " 采购订单id"
  orderId: ID
  " 采购订单备注信息"
  orderRemark: String
  " 采购费用单的提交时间"
  orderSubmitTime: Long
  " 采购运杂费单号"
  purchaseCostCode: String
  " 采购费用id"
  purchaseCostId: ID
  " 采购人"
  purchaseName: String
  " 入库审核人"
  reviewUserName: String
  " 费用单状态"
  status: CostStatusEnum
  " 复核人-提交财务的操作人"
  submitUserName: String
  " 供应商名称"
  supplierName: String
}

" 采购订单明细查询返回出参"
type PurchaseOrderDetailPayload {
  " 采购订单入库审核状态,TO_REVIEWED：待审核，COMPLETED：已完成，REJECTED：已驳回"
  auditStatus: AuditStatusEnum
  " 商品信息集合"
  commodityList: [PurchaseOrderCommodityPayload]
  " 采购订单商品总数(果款合计+运杂费合计)"
  commodityTotal: BigDecimal
  " 采购订单采购总金额"
  commodityTotalAmount: BigDecimal
  " 运杂费合计"
  freightTotalAmount: BigDecimal
  " 果款合计"
  fruitTotalAmount: BigDecimal
  " 采购杂运费"
  miscellaneousFreight: [MiscellaneousFreightPayload]
  " 采购订单编号"
  orderCode: String
  """
   入库单号
      stockOrderCode: String
   所属仓库
      wareHouseName : String
   订单完成时间(入库时间)
  """
  orderCompleteTime: Long
  " 订单创建时间"
  orderCreateTime: Long
  " 采购订单id"
  orderId: ID
  " 供应商联系方式"
  phoneNum: String
  " 采购人"
  purchaseName: String
  " 驳回理由"
  rejectReason: String
  " 备注信息"
  remark: String
  " 入库审核人"
  reviewUserName: String
  " 采购订单状态：TO_WAREHOUSED：待提交，COMPLETE：待入库，COMPLETE：已完成，CANCEL：已取消"
  status: FlowApplyStatusEnum
  " 供应商名称"
  supplierName: String
}

" 采购订单创建返回"
type PurchaseOrderInsertPayload {
  " 采购订单编号"
  orderCode: String
  " 采购订单id"
  orderId: ID
}

" 采购订单列表分页查询返回"
type PurchaseOrderPagePayload {
  " 当前页码"
  pageCurrent: Int
  " 每页显示条数"
  pageSize: Int
  " 返回记录集合"
  records: [PurchaseOrderPayload]
  " 总条数"
  totalRecords: Int
}

" 采购订单信息返回出参"
type PurchaseOrderPayload {
  " 采购订单入库审核状态,TO_REVIEWED：待审核，COMPLETED：已完成，REJECTED：已驳回"
  auditStatus: AuditStatusEnum
  " 商品信息集合"
  commodityList: [PurchaseOrderCommodityPayload]
  " 采购订单编号"
  orderCode: String
  " 订单创建时间(采购时间)"
  orderCreateTime: Long
  " 采购订单id"
  orderId: ID
  " 采购人"
  purchaseName: String
  " 采购订单状态：TO_WAREHOUSED：待提交，COMPLETE：待入库，COMPLETE：已完成，CANCEL：已取消"
  status: FlowApplyStatusEnum
  " 供应商名称"
  supplierName: String
}

" 报表采购单查询"
type PurchaseOrderWebPayload {
  " 采购运杂费合计"
  costPrice: BigDecimal
  " 采购果款合计"
  goodsPrice: BigDecimal
  " 采购商品明细"
  purchaseCommodityDetail: [PurchaseCommodityDetail]
  " 金额合计-采购总合计"
  purchaseCost: BigDecimal
  " 采购费用单code"
  purchaseCostCode: String
  " 采购费用单id"
  purchaseCostId: ID
  " 采购订单code"
  purchaseOrderCode: String
  " 采购订单id"
  purchaseOrderId: ID
  " 采购时间"
  purchaseOrderTime: Long
  " 采购订单供应商"
  purchaseSupplierName: String
  " 采购人"
  purchaserUserName: String
  " 采购订单备注信息"
  remark: String
  " 采购费用单状态"
  status: BillStatusEnum
}

type Query {
  _service: _Service
  " 计算订单金额"
  calculateOrderAmount(input: CalculateOrderInput): CalculateOrderAmountResp
  "回款录入: 欠款结算关联查询"
  calculatorPayment(input: CalculatorPaymentInput!): CalculatorPaymentPayload
  "管控商品是否确认指导价,true：已设置且确认指导价"
  checkCommodityGuidePrice: Boolean
  checkStockBatch(input: CheckStockBatchInput): CheckStockBatchListPayload
  " 调拨费用单按状态统计数量"
  countAllocateCost(input: StockRecordType!): AllocateCostCountPayload
  " 商品批次库存数量统计"
  countCommodityCategoryStock: CommodityCategoryCountListPayload
  "客户: 客户授信数量统计"
  countCreditCustomer(input: CountCreditCustomerInput): CountCreditCustomerPayload
  " 分状态统计销订单数量"
  countOrderStatus: CountOrderStatusPayload
  "待处理异常销售订单数量"
  countPendingAbnormalOrder: Int
  " 采购费用按状态统计"
  countPurchaseCostByStatus: CountPurchaseCostByStatusPayload
  " 根据采购订单的状态统计采购订单"
  countPurchaseOrderByStatus: PurchaseOrderByStatusCountPayload
  " 获取待审核和已审核数量"
  countReturnOrderStatus: CountReturnOrderStatusPayload
  " 欠款统计: 客户统计报表导出 "
  creditCustomerReportExport(input: CreditCustomerInput): String
  " 欠款统计: 商户统计报表导出 "
  creditRegionReportExport(input: RegionCreditInput): String
  "\" 欠款客户管理: 导出报表 "
  customerCreditReportExport(input: MerchantCustomerCreditInput): String
  "欠款管理: 客户欠款统计接口"
  customerDebtCount(input: CustomerDebtCountInput): CustomerDebtCountPayload
  "欠款管理: 欠款统计"
  debtCount(input: DebtCountInput): DebtCountPayload
  " 欠款统计: 动态表头 "
  dynamicTableHead(input: TableHeadInput): [String]
  " 调拨报表导出"
  exportAllocateReportForm(input: PageAllocateOrderInput): String
  " 列表导出"
  exportCostReportForm(input: CostReportFormQueryInput): String
  " 列表导出"
  exportOrderReportForm(input: OrderReportFormQueryInput): String
  " 列表导出"
  exportOutBoundReportForm(input: OutBoundReportFormQueryInput): String
  " 列表导出"
  exportSalesReportForm(input: SalesReportFormQueryInput): String
  " 列表导出"
  exportWarehouseReportForm(input: WarehouseReportFormQueryInput): String
  "退货单: 售后小票"
  getAfterSalesTicket(input: AfterSalesTicketInput): AfterSalesTicketPayload
  " 调拨费用单详情"
  getAllocateCostDetail(input: ID!): AllocateCostDetailPayload
  " 调拨运杂费详情 修改用"
  getAllocateCostInfo(input: ID!): AllocateCostInfoPayload
  " 调拨单详情"
  getAllocateStockRecordDetail(input: AllocateDetailInput): AllocateStockRecordPayload
  " 报损出库详情查询"
  getBreakageRecordDetail(input: ID!): BreakageRecordDetailPayload
  " 获取商户下收银员信息"
  getCashierList: CashierListPayload
  "客户:授信查询"
  getCreditCustomer(input: QueryCreditCustomerInput): CreditCustomerPayload
  "获取当前用户信息"
  getCurrentUser: CurrentUserPayload
  "获取当前用户打印小票权限"
  getCurrentUserTicketPower: [String]
  "客户:条件查询客户"
  getCustomer(input: QueryCustomerInput): CustomerListPayload
  "客户:查询客户基础信息"
  getCustomerBaseInfo(input: CustomerBaseInfoInput): CustomerBaseInfoPayload
  "客户:查询客户联系人"
  getCustomerContact(contactId: Int!): CustomerContactPayLoad
  "客户:查询客户详情"
  getCustomerDetail(customerId: Int!): CustomerDetailPayload
  "客户:查询客户资质"
  getCustomerQualification(customerDetailId: Int!): CustomerQualificationPayload
  "获取数据权限树"
  getDataTree(type: DataType): DataTreePayload
  "欠款管理: 欠款单详情"
  getDebtOrderDetail(input: DebtOrderDetailInput): DebtOrderDetailPayload
  " 调拨费用单详情"
  getFlowTransferCostDetail(input: FlowTransferCostDetailInput): FlowTransferCostPayload
  " 根据id获取商户"
  getMerchant(input: MerchantInput): MerchantPayload
  " 欠款统计: 商户下的总欠款 "
  getMerchantDebtTotal: MerchantDebtTotalPayload
  " 根据订单ID获取订单小票所需数据"
  getOrderBillInfo(input: OrderInfoInput!): OrderBillPayload
  " 退货页面查询订单商品"
  getOrderCommodity(input: Int!): OrderReturnCommodityDetailPayload
  " 根据订单ID查询订单详情"
  getOrderInfo(input: OrderInfoInput!): OrderDetailPayload
  " 根据订单id获取订单信息"
  getOrderInfoByOrderId(input: OrderIdInput): OrderInfoPayLoad
  " 根据订单ID查询订单支付状态"
  getOrderPaymentStatus(input: OrderInfoInput!): OrderPaymentStatusPayload
  " 订单明细查询"
  getOrderReportDetail(input: OrderReportInput): OrderReportFormDetailPayload
  "回款录入: 回款单详情查询"
  getPaymentDetail(input: PaymentDetailInput!): PaymentPayload
  "获取权限列表"
  getPermission(input: GetPermissionInput): [String]
  "获取功能权限树"
  getPowerTree: TreePayload
  " 获取采购订单杂运费"
  getPurchaseCostDetail(input: PurchaseOrderCostInput): PurchaseOrderCostDetailPayload
  " 详情web接口"
  getPurchaseOrder(input: PurchaseOrderIdInput): PurchaseOrderWebPayload
  " 获取采购订单详细信息"
  getPurchaseOrderDetail(input: PurchaseOrderDetailInput): PurchaseOrderDetailPayload
  " 退货记录详情"
  getReturnOrderDetail(input: ReturnOrderIdInput): ReturnOrderDetailPayload
  " 退货记录详情"
  getReturnOrderDetailForWeb(input: ReturnOrderDetailInput): DetailPayload
  "根据角色ID获取数据权限"
  getRoleDataRel(input: GetRoleDataRelInput): KeysPayload
  "根据角色ID获取功能权限"
  getRolePowerRel(id: Int): IdsPayload
  " 销售总览"
  getSalesStatistics: SalesStatisticsPayload
  " 根据组合数据查询SKU"
  getSku(input: SkuOptionQueryInput): CommoditySkuPayload
  " 根据id查询审核相关信息结果"
  getStockRecordDetail(input: AuditStockRecordInput): AuditStockRecordPayload
  " 根据盘点记录id获取本次盘点详情"
  getTakeStockRecordDetail(input: TakeStockRecordDetailInput): TakeStockRecordDetailPayload
  "根据权限码获取待办事项"
  getTodoCount: [TodoCountPayload]
  " 入库/出库 通过ID 查询具体详情"
  getWareHouseRecordDetail(input: WareHouseRecordDetailInput): WareHouseRecordDetailPayload
  "仓库：根据id获取仓库信息"
  getWarehouse(input: WarehouseQueryInput!): WarehouseQueryPayload
  " 查看用户是否有未完成订单"
  hasNotFinishedOrder(id: Int!): Boolean
  "客户:查询是否有待收银订单"
  hasWaitPaymentOrder(input: ID!): Boolean
  " 条件查询仓库"
  listAllWareHouse(input: WarehouseConditionInput): WareHouseListPayload
  " 查询所有入库/出库类型"
  listAllWareHouseType: [String]
  " 根据仓库Id查询库存商品信息(盘点用)"
  listCheckStock(input: CheckStockInput!): ListCheckStockBatchListPayload
  " 获取品类集合"
  listCommodityCategory: ListCommodityCategoryPayload
  "商品品类下拉列表"
  listCommodityCategoryOption: [CommodityCategoryOptionPayload]
  "标签列表查询"
  listCommodityLabel(input: CommodityLabelInput): [CommodityLabelPayload]
  " 获取spec集合"
  listCommoditySpec(input: CommoditySpecInput): ListCommoditySpecsPayload
  " 获取spu集合"
  listCommoditySpu(input: CommoditySpuInput): ListCommoditySpuPayload
  "商品单位列表查询"
  listCommodityUnitType(input: CommodityUnitTypeInput): [CommodityUnitPayload]
  "销售指导价：管控商品品类列表"
  listControlCommodityCategory: ListControlCommodityCategoryPayload
  "销售指导价：管控商品SKU列表"
  listControlCommoditySku(input: ListControlCommoditySkuInput!): ListControlCommoditySkuPayload
  "客户:根据客户首字母排序"
  listCustomer(input: CustomerListInput): [CustomerGroupPayload]
  " 客户类型下拉"
  listCustomerTypeOption: OptionList
  " 采购费用类型查询"
  listFlowCostType: ListCostTypePayload
  " 商户下拉"
  listMerchantOption: MerchantOptionPayload
  " 查询组织下的所有用户列表"
  listOrgUser(input: OrgUserListInput): OrgUserListPayload
  " 出库类型下拉"
  listOutboundOption: OptionList
  " 支付方式下拉"
  listPayMethodOption: OptionList
  " 根据品种查询实时库存"
  listRealtimeStock4Variety(input: RealtimeStockInput): RealtimeStock4VarietyPayload
  " 根据仓库查询实时库存"
  listRealtimeStock4Warehouse(input: RealtimeStockInput): RealtimeStock4WarehousePayload
  "销售指导价：品类推荐标签列表"
  listRecommendTag(input: ListRecommendTagInput!): ListRecommendTagPayload
  " 所属仓库下拉"
  listRepositoryOption: OptionList
  " 销售总览-根据品种查询销售明细"
  listSalesStatisticDetail(input: SalesStatisticDetailInput): SalesStatisticDetailPayload
  " 商品搜索列表"
  listSearchStockSku(input: SearchStockSkuInput): [StockSkuBatchPayload]
  " 查询用户购物车信息"
  listShoppingCar: ShoppingCarListPayload
  " 根据sku查询批次列表"
  listSkuBatch(input: SkuBatchInput): [StockCommodityListPayload]
  " sku分组列表"
  listSkuGroup: [SkuGroupPayload]
  " 根据batch分组"
  listSkuGroupByBatch(input: SkuGroupByBatchInput!): SkuGroupByBatchPayload
  "小票管理列表查询"
  listSmallTicket: TicketListPayload
  " 根据仓库Id选择已有系统库存"
  listStockCommodityBatch(input: StockBatchInput): ListStockBatchListPayload
  " 查询有库存的品种"
  listStockCommodityVariety: [StockCommodityVarietyPayload]
  " 根据仓库查询库存sku"
  listStockSku(input: StockSkuInput): [StockSkuPayload]
  " 出入库记录类型下拉"
  listStockTypeOption(input: StockTypeOptionInput): StockTypeOptionPayload
  " 供应商类型下拉选项"
  listSupplierType: [Option]
  " 获取供应商列表信息"
  listSuppliers(input: SupplierListInput): SupplierListPayload
  "仓库：获取仓库列表"
  listWarehouse(input: WarehouseListInput): [WarehosueListPayload]
  "仓库：仓库类型"
  listWarehouseType: [WarehouseTypeListPayload]
  "获取团队成员信息"
  member(input: MemberIdInput): MemberPayload
  "获取组织树"
  orgTree(input: OrgTreeInput): [OrgTreePayload]
  orgTreeJson: OrgTreeJsonPayload
  "异常销售订单分页查询"
  pageAbnormalSalesOrder(input: PageAbnormalSalesOrderInput): PageAbnormalSalesOrderPayload
  " 分页查询调拨费用单"
  pageAllocateCost(input: PageAllocateCostInput): PageAllocateCostPayload
  " 分页查询调拨报表"
  pageAllocateOrder(input: PageAllocateOrderInput): PageAllocateOrderPayload
  " 调拨单分页查询"
  pageAllocateStockRecord(input: PageAllocateStockRecordInput): PageAllocateStockRecordPayload
  " 报损出库列表分页查询"
  pageBreakageRecord(input: PageBreakageRecordInput): PageBreakageRecordPayload
  "商品别名分页列表"
  pageCommodityAlias(input: CommodityAliasQueryInput): CommodityAliasQueryPayload
  " 列表接口"
  pageCostReportForm(input: CostReportFormPageInput): CostReportFormPagePayload
  "客户: 客户授信分页查询"
  pageCreditCustomer(input: PageCreditCustomerInput): PageCreditCustomerPayload
  " 欠款统计: 客户统计分页查询 "
  pageCreditCustomerQuery(input: CreditCustomerQueryInput): CreditCustomerInfoPayload
  " 欠款统计: 商户统计分页查询 "
  pageCreditRegionQuery(input: RegionCreditQueryInput): RegionCreditInfoPayload
  "客户:获取客户列表"
  pageCustomer(input: CustomerPageInput): CustomerPagePayload
  " 欠款客户管理: 客服欠款详情 "
  pageCustomerCreditInfoQuery(input: CustomerCreditInfoInput): CustomerCreditInfoPayload
  " 欠款客户管理: 查询接口 "
  pageCustomerCreditListQuery(input: MerchantCustomerCreditQueryInput): MerchantCustomerCreditInfoPayload
  "欠款管理: 客户欠款详情"
  pageCustomerDebtDetail(input: CustomerDebtDetailInput): CustomerDebtDetailPagePayload
  "欠款管理: 分页查询欠款"
  pageDebt(input: DebtQueryInput): DebtPagePayload
  " 调拨费用单分页查询"
  pageFlowTransferCost(input: PageFlowTransferCostInput): PageFlowTransferCostPayload
  "分页获取团队"
  pageMember(input: MemberPageInput): MemberPagePayload
  " 查询销售订单列表"
  pageOrder(input: PageOrderInput): OrderPagePayload
  " 客户订单查询"
  pageOrderByCustomer(input: PageOrderByCustomerInput!): OrderPageByCustomerPayload
  " 列表接口"
  pageOrderReportForm(input: OrderReportFormPageInput): OrderReportFormPagePayload
  pageOrg(input: PageOrgInput): OrgPagePayload
  " 分页查询组织下的所有用户"
  pageOrgUser(input: OrgUserPageInput): OrgUserPagePayload
  " 列表接口"
  pageOutBoundReportForm(input: OutBoundReportFormPageInput): OutBoundReportFormPagePayload
  "回款录入: 回款单分页查询(根据personal去区分录入分页和审核分页)"
  pagePayment(input: PagePaymentInput!): PagePaymentPayload
  " 按照时间和收银支付方式分页查询收银订单信息"
  pagePaymentOrder(input: OrderPaymentPageInput): OrderPagePayload
  " 采购费用分页查询"
  pagePurchaseCost(input: PurchaseCostPageInput): PurchaseCostPagePayload
  " 列表接口"
  pagePurchaseCostOrder(input: PagePurchaseCostReportInput): PagePurchaseCostReportPayload
  " 获取采购订单分页列表"
  pagePurchaseOrder(input: PurchaseOrderPageInput): PurchaseOrderPagePayload
  " 分页查询退货订单"
  pageReturnOrder(input: pageReturnOrderInput): PageReturnOrderAuditListPayload
  " 分页查询退货审核"
  pageReturnOrderAudit(input: pageReturnOrderInput): PageReturnOrderAuditListPayload
  " 分页查询退货订单(web)"
  pageReturnOrderForWeb(input: PageInput): PagePayload
  "分页获取角色"
  pageRole(input: PageRoleInput): PageRolePayload
  " 今日销售榜单详情"
  pageSalesList(input: BasePage): SalesListPagePayload
  " 列表接口"
  pageSalesReportForm(input: SalesReportFormPageInput): SalesReportFormPagePayload
  " 销售总览根据订单类型状态分页查询"
  pageSalesStatisticOrder(input: SalesStatisticOrderInput!): SalesStatisticOrderPayload
  " 分页展示批发开单库存商品"
  pageStockCommodity(input: StockCommodityInput): StockCommodityPagePayload
  " 入库/出库记录列表查询"
  pageStockRecord(input: PageStockRecordInput): PagePeachStockRecordPayload
  " 供应商分页查询"
  pageSupplier(input: PageSupplierInput): PageSupplierPayload
  " 分页查询盘点记录"
  pageTakeStockRecord(input: TakeStockRecordInput): PageTakeStockRecordListPayload
  "仓库：仓库分页列表"
  pageWarehouse(input: WarehousePageInput): WarehousePagePayload
  " 列表接口"
  pageWarehouseReportForm(input: WarehouseReportFormPageInput): WarehouseReportFormPagePayload
  " 收银统计"
  paymentCount(input: OrderPaymentCountInput): OrderPaymentCountPayload
  "客户:通过电话号码查询用户名及身份证号"
  queryNameAndIdNumberByPhone(input: String): CustomerNameAndIdNumberPayload
  " 查询供应商基本信息"
  querySupplierBaseInfo(input: QuerySupplierBaseInfoInput): SupplierBasePayload
  " 解析身份证信息"
  recognizeIdCard(input: RecognizeIdCardInput): RecognizeIdCardPayload
  "获取所有角色下拉"
  roleOptions: [RoleOptionPayload]
  " 销售统计"
  saleCount: SaleCountPayLoad
  " 销售统计-商品销售详情"
  saleCountOfCommodity: SaleCountCommodityPayload
  " 销售统计-库存销售详情"
  saleCountOfStock: SaleCountStockPayload
  "搜索员工"
  searchUser(input: SearchUserInput): [SearchUserPayload]
  "回款录入: 统计回款单各状态数量"
  statisticsPaymentStatusCount(input: PaymentStatusCountInput!): [PaymentStatusCountPayload]
  "获取最新app版本"
  version: VersionPayload
}

type RealtimeStock4VarietyPayload {
  " 按品种分组"
  data: [RealtimeStockVarietyGroup]
  " 实时库存总数"
  realtimeStockCount: [StockNumCount]
}

type RealtimeStock4WarehousePayload {
  " 按仓库分组"
  data: [RealtimeStockWarehouseGroup]
  " 实时库存总数"
  realtimeStockCount: [StockNumCount]
}

type RealtimeStockCommodityInfo {
  " 锁定库存"
  lockStock: [StockNumCount]
  " 实时库存"
  realtimeStock: [StockNumCount]
  " 商品skuId"
  skuId: Int
  " 商品sku名称"
  skuName: String
}

type RealtimeStockVarietyGroup {
  " 按仓库分组"
  data: [RealtimeStockWarehouseList]
  " 总数量"
  totalAmount: [StockNumCount]
  " 品种信息"
  varietyInfo: StockCommodityVarietyPayload
}

type RealtimeStockVarietyList {
  " 商品信息"
  data: [RealtimeStockCommodityInfo]
  " 总数量"
  totalAmount: [StockNumCount]
  " 品种信息"
  varietyInfo: StockCommodityVarietyPayload
}

type RealtimeStockWarehouseGroup {
  " 车牌号"
  carNo: String
  " 按品种分组"
  data: [RealtimeStockVarietyList]
  " 挂车号"
  trailerCarNo: String
  " 仓库id"
  warehouseId: ID
  " 仓库名称"
  warehouseName: String
  " 总数量"
  warehouseTotalCount: [StockNumCount]
}

type RealtimeStockWarehouseList {
  " 车牌号"
  carNo: String
  " 商品信息"
  data: [RealtimeStockCommodityInfo]
  " 挂车号"
  trailerCarNo: String
  " 仓库id"
  warehouseId: ID
  " 仓库名称"
  warehouseName: String
}

type RecognizeIdCardPayload {
  " 地址，人像面有效"
  address: String
  " 出生日期，人像面有效"
  birth: String
  " 民族，人像面有效"
  ethnicity: String
  " 发证机关，背面有效"
  issue: String
  " 姓名，人像面有效"
  name: String
  " 身份证号，人像面有效"
  number: String
  " 性别，人像面有效"
  sex: String
  " 有效起始日期，背面有效"
  validFrom: String
  " 有效结束日期，背面有效"
  validTo: String
}

"退款信息"
type RefundInfoPayload {
  "退款明细"
  refundDetail: [MoneyDetailPayload]
  "退款总金额"
  totalAmount: BigDecimal
}

" 商户下统计欠款 "
type RegionCreditInfoPayload {
  " 当前页码 "
  pageCurrent: Int
  " 每页显示条数 "
  pageSize: Int
  " 欠款列表 "
  records: [RegionCreditPayload]
  " 总条数 "
  totalRecords: Long
}

" 商户下欠款列表对象 "
type RegionCreditPayload {
  " 欠款金额 "
  creditTotalAmount: BigDecimal
  " 欠款金额：欠款总额占比 "
  creditTotalProportion: BigDecimal
  " 回款金额 "
  paybackTotalAmount: BigDecimal
  " 回款金额：欠款销售金额占比 "
  paybackTotalProportion: BigDecimal
  " 欠款销售金额 "
  salesCreditTotalAmount: BigDecimal
  " 欠款销售：销售金额占比 "
  salesCreditTotalProportion: BigDecimal
  " 销售金额 "
  salesTotalAmount: BigDecimal
  " 统计维度日期 "
  statisticalDate: String
  " 唯一性id "
  uniqueId: Long
}

" 退货关联订单信息"
type RelationOrderInfo {
  " 欠款金额"
  debitMoney: BigDecimal
  " 欠款单id"
  debitOrderId: ID
  " 优惠金额"
  discountAmount: BigDecimal
  " 销售订单编号"
  orderCode: String
  " 订单商品信息"
  orderCommodities: [OrderCommodityListPayload]
  " 销售订单id"
  orderId: Int
  " 订单支付信息"
  orderPayments: [OrderPaymentPayload]
  " 开单时间"
  orderTime: Long
  " 已付金额"
  paidAmount: BigDecimal
  " 回款金额"
  paymentMoney: BigDecimal
}

" 关联退货订单信息"
type RelationReturnOrderInfo {
  " 退货订单号"
  returnOrderCode: String
  " 退货订单ID"
  returnOrderId: Int
}

type ReturnCommodityDetailPayload {
  " 订单详情id"
  orderDetailId: Int
  " 退货原因"
  reasonsForReturn: String
  " 退货金额"
  returnedAmount: BigDecimal
  " 退货数量"
  returnedQuantity: BigDecimal
  " 退货单位Id"
  returnedUnitId: Int
  " 销售数量"
  salesQuantity: BigDecimal
  " 销售单位Id"
  salesUnitId: Int
  " 商品总价格"
  totalAmount: BigDecimal
  " 销售单价"
  unitPrice: BigDecimal
  " 入库时间"
  warehouseTime: Long
}

type ReturnCommodityPayload {
  " 商品别名"
  commodityAlias: String
  " SKUID"
  commoditySkuId: Int
  " 购买数量"
  returnCommodityDetails: [ReturnCommodityDetailPayload]
}

type ReturnCommoditySelectDetailPayload {
  " 订单详情id"
  orderDetailId: Int
  " 销售数量"
  salesQuantity: BigDecimal
  " 商品总价格"
  totalAmount: BigDecimal
  " 销售数量Id"
  unitId: Int
  " 销售单价"
  unitPrice: BigDecimal
  " 入库时间"
  warehouseTime: Long
}

type ReturnCommoditySelectPayload {
  " 商品别名"
  commodityAlias: String
  " SKUID"
  commoditySkuId: Int
  " 购买数量"
  returnCommodityDetails: [ReturnCommoditySelectDetailPayload]
}

" 退货商品明细"
type ReturnDetailPayload {
  " 商品别名"
  commodityAlias: String
  " skuId"
  commoditySkuId: Int
  " 换算数量"
  convertQuantity: BigDecimal
  " 换算单位Id"
  convertUnitId: Int
  " 退货单价"
  discountUnitPrice: BigDecimal
  " 原始批次号"
  originalBatchCode: String
  " 原始批次号"
  originalBatchId: ID
  " 退货原因"
  reasonsForReturn: String
  " 退货金额"
  returnedAmount: BigDecimal
  " 退货数量"
  returnedQuantity: BigDecimal
  " 退货单位Id"
  unitId: Int
}

type ReturnOperationLog {
  " 操作时间"
  operationTime: Long
  " 操作人"
  operationUser: String
  " 状态"
  status: ReturnOrderEnum
}

type ReturnOrderAuditListPayload {
  " 退货完成时间"
  completeTime: Long
  " 客户名称"
  customerName: String
  " 驳回时间"
  rejectTime: Long
  " 退货商品"
  returnCommodity: [String]
  " 退货单号"
  returnOrderCode: String
  " 退货订单id"
  returnOrderId: Int
  " 退货审核人"
  reviewerName: String
  " 退货发起人"
  sponsorName: String
  " 状态"
  status: ReturnOrderEnum
  " 提交时间"
  submitTime: Long
  " 退货金额"
  totalAmount: BigDecimal
}

type ReturnOrderDetailPayload {
  " 售后方式"
  afterSaleType: AfterSaleType
  " 完成时间"
  completeTime: Long
  " 客户ID"
  customerId: Int
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: String
  " 订单id"
  orderId: Int
  " 订单支付信息"
  orderPaymentList: [OrderPaymentPayload]
  " 联系电话"
  phone: String
  " 退货证明"
  pictureInfo: [PictureInfoPayload]
  " 驳回时间"
  rejectTime: Long
  " 退货备注"
  remark: String
  " 退款金额修改原因"
  returnAmountModifyReason: String
  " 退货商品信息"
  returnCommodityDetail: [ReturnCommodityPayload]
  " 退货订单状态日志"
  returnOperationLogs: [ReturnOperationLog]
  " 退货单号"
  returnOrderCode: String
  " 退货订单id"
  returnOrderId: Int
  " 退货审核人"
  reviewerName: String
  " 退货发起人"
  sponsorName: String
  " 状态"
  status: ReturnOrderEnum
  " 提交时间"
  submitTime: Long
  " 退货金额"
  totalAmount: BigDecimal
}

" 退货订单信息对象"
type ReturnOrderInfo {
  " 售后方式"
  afterSaleType: AfterSaleType
  " 退货完成时间"
  completeTime: Long
  " 退货原因"
  remark: String
  " 退款金额修改原因"
  returnAmountModifyReason: String
  " 退货商品明细信息"
  returnCommodityDetail: [ReturnDetailPayload]
  " 退货单号"
  returnOrderCode: String
  " 退货订单id"
  returnOrderId: Int
  " 退货审核人"
  reviewerName: String
  " 退货发起人"
  sponsorName: String
  " 退货金额"
  totalAmount: BigDecimal
}

" 退货订单返回对象"
type ReturnOrderPayload {
  " 售后方式"
  afterSaleType: AfterSaleType
  " 退货完成时间"
  completeTime: Long
  " 客户id"
  customerId: Int
  " 客户名称"
  customerName: String
  " 欠款金额"
  debitMoney: BigDecimal
  " 欠款单id"
  debitOrderId: ID
  " 客户财务系统编码"
  financialSystemCode: String
  " 订单支付信息"
  orderPayments: [OrderPaymentPayload]
  " 回款金额"
  paymentMoney: BigDecimal
  " 退货订单备注"
  remark: String
  " 退货单号"
  returnOrderCode: String
  " 退货订单id"
  returnOrderId: Int
  " 退款金额"
  returnTotalAmount: BigDecimal
  " 退货审核人"
  reviewerName: String
  " 原销售单号"
  saleOrderCode: String
  " 销售金额"
  saleTotalAmount: BigDecimal
  " 退货发起人"
  sponsorName: String
}

type RoleOptionPayload {
  label: String
  value: Int
}

type RolePayload {
  "角色ID"
  id: Int
  "角色名称"
  roleName: String
}

" 销售统计返回结果出参-商品"
type SaleCountCommodityPayload {
  " 返回记录集合"
  records: [CommoditySalesListPayload]
}

" 统计出参"
type SaleCountPayLoad {
  " 当日开单数"
  orderNumberOfDay: Int
  " 当日销售金额"
  salesAmountOfDay: BigDecimal
}

" 销售统计返回结果出参-库存"
type SaleCountStockPayload {
  " 返回记录集合"
  records: [StockSalesListPayload]
}

type SalesListPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [SalesListPayload]
  totalRecords: Long
}

type SalesListPayload {
  " 品类名"
  categoryName: String
  " 品类id"
  commodityCategoryId: Int
  " 品种id"
  commodityVarietyId: Int
  " 品种名"
  commodityVarietyName: String
  " 今日销售金额"
  salesAmount: BigDecimal
  " 今日销售数量"
  salesNum: [SalesNumCount]
  "价格"
  skuPrice: [SkuPriceInfo]
}

"销售数量统计"
type SalesNumCount {
  "数量"
  number: BigDecimal
  "单位类型id"
  unitType: Int
}

" 列表集合对象"
type SalesReportFormListPayload {
  " 异常备注"
  abnormalRemarkList: [String]
  " 批次号"
  batchStockCode: String
  " 收银备注"
  cashierRemark: String
  " 客户ID"
  customerId: Long
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: String
  " 优惠后单价"
  discountUnitPrice: BigDecimal
  " 主键"
  id: Long
  "标签备注"
  labelRemarkList: [String]
  " 手工单编号"
  orderCode: String
  " 订单备注"
  orderRemark: String
  " 付款类型"
  payMethod: [String]
  " 销售时间"
  payTime: Long
  " SKUID"
  productId: Long
  " SKU名称"
  productName: String
  " 备注"
  remark: String
  "销售数量转换"
  saleQuantity: CurrentUnitConversion
  " 合计金额"
  totalMoney: BigDecimal
  " 单价"
  unitPrice: BigDecimal
  "基本单位数量换算"
  unitQuantity: StockQuantityUnit
  " 品种组"
  varietyGroup: String
  " 仓库名称"
  warehouseName: String
}

" 列表分页对象"
type SalesReportFormPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [SalesReportFormListPayload]
  totalRecords: Long
}

type SalesStatisticDetailData {
  " 商品skuId"
  commoditySkuId: Int
  " 商品sku名称"
  commoditySkuName: String
  " 今日销售金额"
  salesAmount: BigDecimal
  " 今日销售数量"
  salesNum: [SalesNumCount]
  "价格"
  skuPrice: [SkuPriceInfo]
}

type SalesStatisticDetailPayload {
  " 品类名"
  categoryName: String
  " 品种id"
  commodityVarietyId: Int
  " 品种名"
  commodityVarietyName: String
  " 销售详情列表"
  data: [SalesStatisticDetailData]
}

type SalesStatisticOrderData {
  " 退货订单"
  returnOrder: ReturnOrderAuditListPayload
  " 销售订单"
  saleOrder: OrderListPayload
}

type SalesStatisticOrderPayload {
  pageCurrent: Int
  pageSize: Int
  " 订单分页列表"
  records: [SalesStatisticOrderData]
  totalRecords: Long
}

type SalesStatisticsPayload {
  " 实收金额"
  actualAmount: BigDecimal
  " 已取消订单"
  cancelAmount: Int
  " 今日退货订单"
  returnAmount: Int
  " 今日销售榜单"
  salesList: [SalesListPayload]
  " 今日销售总金额"
  totalSalesAmount: BigDecimal
  " 今日销售订单总数"
  totalSalesNum: Int
  " 待收银订单"
  unpaidAmount: Int
  " 待提货订单"
  unpickAmount: Int
}

type SearchUserPayload {
  "手机号"
  phone: String
  roleInfos: [UserRolePayload]
  "是否被使用 0未使用，1已使用"
  used: Int
  "用户ID"
  userId: Int
  "用户名"
  userName: String
}

" 购物车返回信息"
type ShoppingCarListPayload {
  " SKU ID"
  shoppingCarResp: [ShoppingCarPayload]
  " 商品数量"
  totalCommodityCount: Int!
  " 总价"
  totalPrice: BigDecimal!
}

" 购物车返回信息"
type ShoppingCarPayload {
  " SKU ID"
  commoditySkuId: Int!
  " SKU名称"
  commoditySkuName: String!
  " sku集合"
  shoppingCarSkus: [ShoppingCarSkuPayload]
  "单位转换关系"
  unitConversion: UnitConversion
}

type ShoppingCarSkuPayload {
  " 车牌号"
  catNo: String
  " 商品品类ID"
  commodityCategoryId: Int!
  " 入库时间"
  entryTime: Long
  " 购买数量"
  quantity: BigDecimal!
  "数量单位类型"
  quantityUnitType: Int
  " 购物车ID"
  shoppingCarId: Int!
  " 小计金额"
  skuTotalAmount: BigDecimal
  " 购物车ID"
  stockId: ID!
  " 库存数量"
  stockQuantity: StockQuantityUnit
  " 单价"
  unitPrice: BigDecimal!
  " 仓库名称"
  warehouseName: String
}

" sku明细信息"
type SkuDetailInfo {
  " Sku id"
  skuId: Int
  " Sku 名称"
  skuName: String
  "价格"
  skuPrice: [SkuPriceInfo]
  " Sku 销售数量"
  skuQuantity: [SalesNumCount]
}

type SkuGroupByBatchPayload {
  data: [StockSkuGroup]
}

type SkuGroupPayload {
  category: String
  categoryId: Int
  data: [SkuSimpleInfo]
}

type SkuOptionPayload {
  optionId: [Int]
}

"sku价格对象"
type SkuPriceInfo {
  " 最高价"
  maxPrice: BigDecimal
  " 最低价"
  minPrice: BigDecimal
  "单位类型id"
  unitType: Int
}

type SkuSimpleInfo {
  " true 禁用，false 启用"
  disable: Boolean
  skuId: Int
  skuName: String
}

type StockBatchDetailPayload {
  "批次id"
  batchId: ID
  "可售库存-商品单位转换"
  canSaleUnitConversion: StockQuantityUnit
  "  入库时间"
  entryTime: Long
  "系统库存-商品单位转换"
  entryUnitConversion: StockQuantityUnit
  "锁定库存-商品单位转换"
  lockUnitConversion: StockQuantityUnit
}

type StockBatchSkuPayload {
  "品类id"
  categoryId: Int
  "商品id"
  commodityId: Int
  "商品sku_id"
  commoditySkuId: Int
  "sku名称"
  skuName: String
  stockBatchDetail: [StockBatchDetailPayload]
}

type StockCommodityListPayload {
  " 柜号"
  cabinetCode: String
  " 车牌号"
  carNo: String
  " 品类 ID"
  commodityCategoryId: Int
  " SKU ID"
  commoditySkuId: Int
  " SKU名称"
  commoditySkuName: String
  " SPU ID"
  commoditySpuId: Int
  " true 禁用，false 启用"
  disable: Boolean
  "管控商品指导价"
  guidePrice: BigDecimal
  "管控商品指导价数量单位"
  guidePriceUnitId: Int
  " 入库时间"
  inStockTime: Long
  "购物车数量单位"
  quantityUnitType: Int
  " 是否退货"
  refundMarksStatus: Boolean
  " 购物车数量"
  shoppingCarNum: BigDecimal
  " 可售库存"
  stock: StockQuantityUnit
  " 库存ID"
  stockId: ID
  " 是否展示仓库附加信息"
  temporaryStatus: Boolean
  " 挂车号"
  trailerCarNo: String
  "单位换算"
  unitConversion: UnitConversion
  " 单价"
  unitPrice: BigDecimal
  " 仓库ID"
  warehouseId: ID
  " 仓库名称"
  warehouseName: String
  " 仓库类型"
  warehouseType: String
}

type StockCommodityPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [StockCommodityListPayload]
  totalRecords: Int
}

type StockCommodityVarietyPayload {
  " 品类id"
  categoryId: Int
  " 品类名称"
  categoryName: String
  " 品种id"
  varietyId: Int
  " 品种名称"
  varietyName: String
}

" 商品库存信息"
type StockDetailInfo {
  " skuId"
  skuId: Int
  " sku 名称"
  skuName: String
  " sku 销售数量"
  skuQuantity: [SalesNumCount]
}

"库存数量统计"
type StockNumCount {
  "数量"
  number: BigDecimal
  "单位类型id"
  unitType: Int
}

type StockOutPayload {
  " 出库单号"
  stockOutCode: String
  " 出库记录id"
  stockOutId: ID
}

"库存数量单位对象"
type StockQuantityUnit {
  "基本单位数量"
  basicQuantity: BigDecimal
  "基本单位"
  basicType: Int
  "skuId"
  skuId: Int
  "辅助单位数量"
  subQuantity: BigDecimal
  "辅助单位"
  subType: Int
}

" 库存销售明细"
type StockSalesListPayload {
  " 车牌号"
  carNumber: String
  " 库存明细"
  stockDetail: [StockDetailInfo]
  " 仓库库存销售总件数"
  totalQuantity: [SalesNumCount]
  " 挂车号"
  trailerNumber: String
  " 仓库id"
  wareHouseId: ID
  " 仓库名称"
  wareHouseName: String
}

type StockSkuBatchPayload {
  " 车牌号"
  carNo: String
  " 商品列表"
  data: [StockSkuGroup]
  " 是否展示仓库附加信息"
  temporaryStatus: Boolean
  " 挂车号"
  trailerCarNo: String
  " 仓库id"
  warehouseId: ID
  " 仓库名称"
  warehouseName: String
}

type StockSkuGroup {
  " SKU ID"
  commoditySkuId: Int
  " SKU名称"
  commoditySkuName: String
  " 分批次库存商品"
  data: [StockSkuInfo]
  "单位换算对象"
  unitConversion: UnitConversion
}

type StockSkuInfo {
  " 库存批次ID"
  batchId: ID
  " 车牌号"
  carNo: String
  " 换算库存数量"
  convertQuantity: BigDecimal
  " 换算单位(如为0,则没有配置双单位)"
  convertUnit: Int
  " 成本价"
  costPrice: String
  " 入库时间"
  inStockTime: Long
  " 可售库存"
  stock: BigDecimal
  " 是否展示仓库附加信息"
  temporaryStatus: Boolean
  " 挂车号"
  trailerCarNo: String
  " 可售库存单位"
  unit: Int
  " 仓库ID"
  warehouseId: ID
  " 仓库名称"
  warehouseName: String
  " 仓库类型"
  warehouseType: String
}

type StockSkuPayload {
  " 品类 ID"
  categoryId: Int
  " 品类名称"
  categoryName: String
  data: [StockSkuGroup]
}

type StockTypeOptionPayload {
  option: [Option2]
}

"---------------- 出参 ------------------"
type SupplierBasePayload {
  "创建人id"
  createBy: Int
  "创建时间"
  createTime: Long
  "删除标识"
  deleted: Int
  "供应商门牌号"
  houseNum: String
  "供应商id"
  id: Int
  "供应商名称"
  name: String
  "供应商地址"
  supplierAddress: String
  "纳税人识别号"
  tfn: String
}

type SupplierCheckPayload {
  "错误信息提示"
  errorMsg: String
  "存在:true,不存在:false"
  status: Boolean
}

" 供应商列表信息返回"
type SupplierListPayload {
  " 供应商列表信息"
  records: [SupplierPayload]
}

" 供应商信息"
type SupplierPayload {
  " 供应商属性"
  attribute: AttributeTypeEnum
  " 创建时间"
  createTime: Long
  " 财务系统编码"
  financialSystemCode: String
  " 门牌号"
  houseNum: String
  " 供应商手机号"
  phoneNum: String
  " 备注信息"
  remark: String
  " 供应商地址"
  supplierAddress: String
  " 业务系统id"
  supplierDetailId: Int
  " 供应商id"
  supplierId: Int
  " 供应商名称"
  supplierName: String
  " 供应商所属组织"
  supplierOrgId: Int
  " 供应商简称"
  supplierShortName: String
  " 供应商类型id"
  supplierTypeId: Int
  " 纳税人识别号"
  tfn: String
  " 供应商类型"
  typeName: String
}

" 盘点商品详情"
type TakeStockCommodityDetailPayload {
  "批次号"
  batchCode: String
  " 10:正常 20:盘赢 30:盘亏"
  checkStatus: Int
  "盘点库存商品单位转换"
  checkUnitConversion: StockQuantityUnit
  " 商品名称"
  commoditySkuName: String
  "入库时间"
  entryTime: Long
  " 10:正常 20:盘赢 30:盘亏"
  orderType: Int
  " 溯源批次号"
  originalBatchCode: String
  " 异常原因"
  remark: String
  "skuId"
  skuId: Int
  " 入库/出库 单号"
  stockOrderCode: String
  "系统库存商品单位转换"
  sysUnitConversion: StockQuantityUnit
}

type TakeStockCreatePayload {
  loseRecord: TakeStockCreateRecordPayload
  winRecord: TakeStockCreateRecordPayload
}

type TakeStockCreateRecordPayload {
  recordCode: String
  recordId: ID
}

" 盘点详情"
type TakeStockRecordDetailPayload {
  " 存在异常数量"
  abnormalQuantity: Int
  " 盘点商品数量"
  checkCount: Int
  " 盘点日期"
  checkDate: Long
  "盘点提交时间"
  createTime: Long
  records: [TakeStockCommodityDetailPayload]
  " 备注信息"
  remark: String
  " 盘点人"
  username: String
  " 盘点仓库名称"
  warehouseName: String
}

" 盘点记录信息"
type TakeStockRecordPayload {
  " 盘点日期"
  checkDate: Long
  " 盘点记录Id"
  checkId: ID
  " 盘点数量"
  checkNum: BigDecimal
  " 提交时间"
  createTime: Long
  "备注"
  remark: String
  " 库存状态(10:正常，20：异常)"
  totalStatus: Int
  " 操作人"
  username: String
  " 盘点仓库"
  warehouseName: String
}

" 小票启用/停用返回"
type TicketEnablePayload {
  " 错误消息"
  errorMessage: String
  " 启用/停用状态,ture 成功  false 失败"
  operateStatus: Boolean
}

" 小票类型返回对象"
type TicketGroupPayload {
  "小票业务类型"
  businessType: TicketBusinessTypeEnum
  " 小票数据集合"
  ticketList: [TicketPayload]
}

" 小票查询列表返回结果"
type TicketListPayload {
  records: [TicketGroupPayload]
}

" 小票信息返回对象"
type TicketPayload {
  "小票状态,1:启用 99：禁用"
  status: Int
  "小票id"
  ticketId: Int
  "小票类型"
  ticketType: TicketType
}

type TodoCountPayload {
  "待办数量"
  todoCount: Int
  type: TodoType
}

type TreeNode {
  "子节点"
  children: [TreeNode]
  "禁用"
  disabled: Boolean
  "节点值等于ID"
  key: Int
  "父节点ID"
  parentId: Int
  "名称"
  title: String
}

type TreePayload {
  nodes: [TreeNode]
}

"标准单位换算对象"
type UnitConversion {
  "基本单位"
  basicType: Int
  "基本单位换算值"
  basicTypeRatio: BigDecimal
  "skuId"
  skuId: Int
  "辅助单位"
  subType: Int
  "辅助单位换算比值"
  subTypeRatio: BigDecimal
}

" 用户信息"
type UserPayload {
  "头像"
  avatar: String
  "联系方式"
  phone: String
  "用户ID"
  userId: Int
  "用户名称"
  userName: String
}

type UserRolePayload {
  " 角色信息"
  roleId: Int
  " 角色名称"
  roleName: String
}

type VersionPayload {
  "ios 苹果商店的应用 id"
  appleId: String
  "创建时间"
  createAt: Long
  "android 包下载地址"
  downloadUrl: String
  "平台 0:Web 1:Android 2:IOS"
  platform: Int
  "发布时间"
  releaseAt: Long
  "更新信息"
  updateInfo: String
  "0不升级，1升级，2强制升级"
  upgradeStrategy: Int
  "版本号"
  version: Int
  "版本编码"
  versionCode: String
}

" 仓库商品"
type WareHouseCommodityPayload {
  " 批次库存id"
  batchStockId: ID
  " 商品名称"
  commodityName: String
  " 入库时间"
  entryTime: Long
  " 系统库存"
  quantity: BigDecimal
}

" 厂库集合"
type WareHouseListPayload {
  records: [WareHousePayload]
}

" 厂库"
type WareHousePayload {
  " 车牌号"
  carNo: String
  " 挂车号"
  trailerCarNo: String
  " 厂库 Id"
  wareHouseId: ID
  " 厂库名"
  wareHouseName: String
}

" 出入库记录详情"
type WareHouseRecordDetailPayload {
  " 调入商户"
  allocateInMerchants: String
  " 调入仓库"
  allocateInWarehouse: String
  " 调出组织"
  allocateOutOrganization: String
  " 调出仓库"
  allocateOutWarehouse: String
  " 调拨类型"
  allocateType: AllocateType
  " 报损照片"
  breakagePictures: [PictureInfoPayload]
  " 报损单"
  breakageReceipts: [PictureInfoPayload]
  " 收银员"
  cashier: String
  " 盘点时间"
  checkTime: Long
  " 入库商品明细"
  commodityDetail: [CommodityDetailPayload]
  "  创建时间"
  createTime: Long
  " 出入库类型"
  entryType: WarehouseAllType
  " 调拨单id"
  flowId: ID
  " 采购/调拨杂运费"
  miscellaneousFreight: [MiscellaneousFreightPayload]
  " 操作人"
  operator: String
  " 订单号"
  orderCode: String
  " 开单时间"
  orderTime: Long
  " 出库记录商品明细"
  outCommodityDetail: [OutCommodityDetailPayload]
  " 入 (供应商)"
  provideName: String
  "  备注"
  remark: String
  " 出入库时间"
  stockTime: Long
  " 入库/出库单号"
  warehouseCode: String
  " 仓库"
  warehouseName: String
}

"仓库列表返回"
type WarehosueListPayload {
  "仓库地址"
  address: String
  "仓库id"
  id: ID
  "仓库名称"
  name: String
  "所属商户"
  organizationName: String
  "仓库状态"
  status: WarehouseStatEnum
  "仓库类型"
  type: String
}

"获取仓库分页列表返回值"
type WarehousePagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [WarehosueListPayload]
  totalRecords: Int
}

type WarehouseQueryPayload {
  "仓库地址"
  address: String
  "仓库id"
  id: ID
  "仓库名称"
  name: String
  "所属商户"
  organizationName: String
  "仓库状态"
  status: WarehouseStatEnum
  "仓库类型"
  type: String
}

" 列表集合对象"
type WarehouseReportFormListPayload {
  " 批次号(溯源批次号)"
  batchStockCode: String
  " 商品sku标准名称"
  commoditySkuName: String
  " 主键"
  id: ID
  " 操作人"
  operatorName: String
  " 入库单号"
  orderCode: String
  " 备注信息"
  remark: String
  " 入库数量商品标准转换对象"
  stockQuantityUnit: StockQuantityUnit
  " 所属仓库"
  warehouseName: String
  " 入库时间"
  warehouseTime: Long
  " 入库类型"
  warehouseType: String
}

" 列表分页对象"
type WarehouseReportFormPagePayload {
  pageCurrent: Int
  pageSize: Int
  records: [WarehouseReportFormListPayload]
  totalRecords: Long
}

"仓库类型返回值"
type WarehouseTypeListPayload {
  label: String
  value: Int
}

type _Service {
  sdl: String!
}

"商品sku明细对象"
type commoditySkuDetailPayload {
  "批次id"
  batchId: ID
  "小计"
  batchSubtotal: BigDecimal
  "换算数量"
  convertQuantity: BigDecimal
  "换算单位"
  convertUnit: Int
  "数量"
  quantity: BigDecimal
  "数量单位"
  unitId: Int
  "单价"
  unitPrice: BigDecimal
}

enum AbnormalSalesOrderStatus {
  CONFIRMED
  UNKNOWN
  UNNECESSARY
  UNRECOGNIZED
  UNSPECIFIED
  WAIT
}

" 售后类型"
enum AfterSaleType {
  RETURN_AND_REFUND
  RETURN_ONLY
  UNKNOWN
  UNRECOGNIZED
  UNSPECIFIED
}

enum AllocateApprovalStatusEnum {
  APPROVAL_COMPLETE
  APPROVAL_WAIT
}

enum AllocateCostEnum {
  ALL
  CANCEL
  HAS_SUBMIT
  UNRECOGNIZED
  WAIT_SUBMIT
}

enum AllocateCostStatus {
  BILL_COMPLETE
  BILL_FD_UN_REVIEWED
  BILL_UN_CONFIRMED
  BILL_UN_SUBMITTED
  UNRECOGNIZED
}

enum AllocateOrderWarehouseInTypeEnum {
  ALLOCATE_IN
  NONE
  PURCHASE
}

enum AllocateStatus {
  FLOW_TRANSFER_STATUS_CANCEL
  FLOW_TRANSFER_STATUS_COMPLETED
  FLOW_TRANSFER_STATUS_WAIT_AUDIT
  FLOW_TRANSFER_STATUS_WAIT_RECEIPT
  UNRECOGNIZED
}

enum AllocateType {
  AREA_TRANSFER
  ORGANIZATION_TRANSFER
  UNRECOGNIZED
  WAREHOUSE_TRANSFER
}

" 内外部属性"
enum AttributeTypeEnum {
  EXTERNAL
  INTERNAL
  UNRECOGNIZED
}

"""
------------------ 枚举 ----------------
 采购订单审核状态枚举
"""
enum AuditStatusEnum {
  COMPLETED
  REJECTED
  TO_REVIEWED
  UNRECOGNIZED
}

" 费用单状态"
enum BillStatusEnum {
  BILL_BIZ_UN_REVIEWED
  BILL_COMPLETE
  BILL_FD_UN_REVIEWED
  BILL_UN_CONFIRMED
  BILL_UN_SUBMITTED
  ERROR_BILL_STATUS
  UNRECOGNIZED
}

" 经营时长"
enum BusinessDuration {
  ABOVE_TEN_YEAR
  FIVE_TEN_YEAR
  ONE_THREE_YEAR
  ONE_YEAR
  THREE_FIVE_YEAR
  UNRECOGNIZED
}

" 经营规模"
enum BusinessScale {
  ABOVE_FIFTY_MILLION
  FIVE_TEN_MILLION
  ONE_FIVE_MILLION
  ONE_HUNDRED_THOUSAND
  ONE_TEN_HUNDRED_THOUSAND
  TEN_FIFTY_MILLION
  UNRECOGNIZED
}

" 业务相关类型"
enum BusinessType {
  GSCM
  INVENTORY
  PURCHASE
  WHOLESALE
}

"--------------- 枚举 -------------"
enum CheckTypeEnum {
  financialSystemCode
  fullName
  mobile
  shortName
  supplierDefault
  tfn
}

"商品类型枚举"
enum CommodityTypeEnum {
  ASSIST
  BOX
  DEFECTIVE
  FOOD
  FRUIT
  HALF_PRODUCT
  PRODUCT
  RAW_MATERIAL
  RETURN
  UNKNOWN
  UNRECOGNIZED
  UNSPECIFIED
}

" 采购费用状态类型"
enum CostStatusEnum {
  CANCEL
  COMPLETE
  UNRECOGNIZED
  UN_SUBMIT
}

" 费用类型"
enum CostType {
  CHILL
  ERROR_COST
  FORKLIFT
  HANDCART
  HANDLING
  LOGISTICS
  OTHER
  PACK
  THREE_ROUNDS
  TRANSPORT
  UNRECOGNIZED
}

" 客户授信状态"
enum CreditPeriodStatusEnum {
  DISABLE
  ENABLE
  UNINITIALIZED
  UNKNOWN
  UNRECOGNIZED
  UNSPECIFIED
}

"客户类型"
enum CustomerType {
  COMPANY
  PERSONAL
  RETAIL
  UNKNOWN
  UNRECOGNIZED
}

" 数据权限类型"
enum DataType {
  PRODUCT
  UNRECOGNIZED
}

enum DebtOrderStatusEnum {
  CANCELLED
  HAVE_BEEN_SETTLED
  PARTIAL_SETTLEMENT
  TO_BE_SETTLED
  UNKNOWN_TYPE
  UNRECOGNIZED
}

" 统计维度枚举 "
enum DimensionIdentification {
  DAY
  MONTH
  QUARTER
  UNRECOGNIZED
  YEAR
}

enum ErrorDetail {
  DEADLINE_EXCEEDED
  ENHANCE_YOUR_CALM
  FIELD_NOT_FOUND
  INVALID_ARGUMENT
  INVALID_CURSOR
  MISSING_RESOURCE
  SERVICE_ERROR
  TCP_FAILURE
  THROTTLED_CONCURRENCY
  THROTTLED_CPU
  UNIMPLEMENTED
  UNKNOWN
}

enum ErrorType {
  BAD_REQUEST
  FAILED_PRECONDITION
  INTERNAL
  NOT_FOUND
  PERMISSION_DENIED
  UNAUTHENTICATED
  UNAVAILABLE
  UNKNOWN
}

" 文件类型枚举"
enum FileType {
  BUSINESS_LICENSE
  DRIVER_LICENSE
  ID_CARD
  OTHER
  POWER_OF_ATTORNEY
  RESIDENCE_BOOKLET
  TAX_REGISTRATION_CERTIFICATE
  UNRECOGNIZED
}

" 采购订单查询类型"
enum FlowApplyQueryStatusEnum {
  QUERY_ALL
  QUERY_CANCEL
  QUERY_COMPLETE
  QUERY_UN_STORAGE
  QUERY_UN_SUBMIT
  UNRECOGNIZED
}

" 采购订单状态枚举"
enum FlowApplyStatusEnum {
  CANCEL
  COMPLETE
  PART_STORAGE
  REFUSE
  UNRECOGNIZED
  UN_STORAGE
  UN_SUBMIT
}

" 销售指导价确认状态 "
enum GuidePriceState {
  CONFIRMED
  UNKNOWN
  UNRECOGNIZED
  UN_CONFIRMED
  UN_SETTING
}

" 流程类型"
enum OrderProcessType {
  ORDER_PROCESS_BILL
  ORDER_PROCESS_CANCEL
  ORDER_PROCESS_CASHIER
  ORDER_PROCESS_PART_PICK
  ORDER_PROCESS_PICK_COMPLETE
  ORDER_PROCESS_RETURN_APPLY
  ORDER_PROCESS_RETURN_COMPLETE
  ORDER_PROCESS_RETURN_REJECT
  UNRECOGNIZED
}

enum OrderQueryStatus {
  QUERY_CANCEL
  QUERY_CANCEL_UNPICK
  QUERY_COMPLETE
  QUERY_PAID_COMPLETE
  QUERY_UNPAID
  QUERY_UNPICK
  UNRECOGNIZED
}

" 订单查询类型"
enum OrderQueryType {
  CANCEL_UNPICK_ORDER
  PAYMENT_ORDER
  PAYMENT_RECORD
  SALES_ORDER
  UNRECOGNIZED
}

" 订单报表查询状态"
enum OrderReportQueryStatus {
  ALL
  CANCEL
  COMPLETED
  RETURNED
  UNDONE
  UNRECOGNIZED
}

enum OrderSchema {
  SCHEMA_NEW
  SCHEMA_OLD
  UNRECOGNIZED
}

" 订单状态"
enum OrderStatus {
  CANCEL
  CANCEL_INVALID
  CANCEL_UNPICK
  COMPLETE
  PART_UNPICK
  TIME_OUT
  UNPAID
  UNPICK
  UNRECOGNIZED
}

"订单类型"
enum OrderType {
  RETAIL
  UNRECOGNIZED
  WHOLESALE
}

" 出库类型"
enum OutBoundType {
  ALLOCATE_OUT
  BREAKAGE
  COME_OTHER
  MARKET
  MOVING_WAREHOUSE_OUT
  PROFIT_LOSS
}

" 欠款单逾期状态"
enum OverdueStatusEnum {
  NOT_OVERDUE
  OVERDUE_SOON
  Overdue
  UNRECOGNIZED
}

" 付款方式"
enum PayMode {
  ERROR_PAY
  HALF_MONTH_PAY
  MONTH_PAY
  ONCE_PAY
  UNRECOGNIZED
}

" 回款单状态"
enum PaymentStatus {
  BIZ_UN_REVIEWED
  CANCEL
  COMPLETE
  REJECT
  UNRECOGNIZED
  UN_CONFIRMED
  UN_SUBMITTED
}

" 支付方式"
enum PaymentType {
  ALIPAY
  CASH
  PERIOD
  SWIPE
  TRANSFER_ACCOUNTS
  UNKNOWN
  UNRECOGNIZED
  UNSPECIFIED
  WECHAT
  WRITE_OFF_BAD_DEBTS
}

" 经营类型"
enum QualificationBusinessType {
  BUSINESS_SUPER
  DISTRIBUTOR
  EXCLUSIVE_SHOP
  INDIVIDUAL
  OTHER
  UNRECOGNIZED
}

"退货订单类型"
enum ReturnOrderEnum {
  COMPLETED
  PENDING_REVIEW
  REJECT
  REVIEWED
  UNRECOGNIZED
}

enum SaleOrderProcessType {
  ORDER_PROCESS_BILL
  ORDER_PROCESS_CANCEL
  ORDER_PROCESS_CASHIER
  ORDER_PROCESS_PART_PICK
  ORDER_PROCESS_PICK_COMPLETE
  UNKNOWN
  UNRECOGNIZED
  UNSPECIFIED
}

" 销售总览订单查询状态枚举"
enum SalesStatisticOrderEnum {
  CANCELED
  RETURNED
  UNPAID
  UNPICK
}

" 回款规则"
enum SettleRuleEnum {
  SELF_MOTION
  SETTLE_ASSIGN
  UNRECOGNIZED
}

" 排序规则类型"
enum SortRuleType {
  ASC
  DESC
  UNRECOGNIZED
}

enum StockQueryType {
  CHECK
  OUT
  UNRECOGNIZED
}

" 出入库查询类型"
enum StockRecordQueryType {
  STOCK_IN_APPLY
  STOCK_IN_RECORD
  STOCK_OUT_RECORD
  UNRECOGNIZED
}

enum StockRecordType {
  ALL
  IN
  OUT
  UNRECOGNIZED
}

" 小票业务类型"
enum TicketBusinessTypeEnum {
  AFTER_SALES_RECEIPT
  SALES_RECEIPT
  UNRECOGNIZED
}

" 小票类型"
enum TicketType {
  AFTER_SALES_CERTIFICATE
  CUSTOMER_TICKET
  CUSTOMER_TICKET_WITH_PRICE
  PAYMENT_CODE
  PAYMENT_TICKET
  PICK_TICKET
  UNRECOGNIZED
}

enum TodoType {
  PEACH_ABNORMAL_SALES
  PEACH_APP_CALLS_UP_THE_EXPENSE_SLIP
  PEACH_APP_PURCHASE_EXPENSE_LIST
  PEACH_APP_PURCHASE_ORDER
  PEACH_APP_TRANSFERS_THE_CHARGE_SLIP
  PEACH_CASHIER_ORDER
  PEACH_LIBRARY_FUNCTION
  PEACH_PAYMENT_COLLECTION_ENTRY
  PEACH_PAYMENT_COLLECTION_REVIEW
  PEACH_RETURN_OF_THE_AUDIT
  PEACH_SALES_GUIDE_PRICE
  PEACH_SALES_ORDER
  UNRECOGNIZED
}

" 用户状态枚举"
enum UserStatusEnum {
  DEPARTURE
  ON_JOB
  SUSPENDED
  UNRECOGNIZED
  USER_ERROR_STATUS
}

"""
scalar
 入库类型
"""
enum WareHouseType {
  ALLOCATE_IN
  ENTRY_OTHER
  INVENTORY_PROFIT
  MOVING_WAREHOUSE_IN
  ORDER_CANCEL_IN
  PURCHASE
  PURCHASE_SELF
  REFUND
  TRANSFER_WITHDRAW
}

" 库存管理枚举类"
enum WarehouseAllType {
  ALLOCATE_IN
  ALLOCATE_OUT
  BREAKAGE
  COME_OTHER
  ENTRY_OTHER
  INVENTORY_PROFIT
  MARKET
  MOVING_WAREHOUSE_IN
  MOVING_WAREHOUSE_OUT
  ORDER_CANCEL_IN
  PROFIT_LOSS
  PURCHASE
  PURCHASE_SELF
  REFUND
  TRANSFER_WITHDRAW
}

"仓库：仓库状态"
enum WarehouseStatEnum {
  DISABLE
  ENABLE
  ERROR
  UNRECOGNIZED
}

"仓库类型"
enum WarehouseTypeEnum {
  FIXED_PARKING_SPACE
  FIXED_WAREHOUSE
  TEMPORARY_PARKING_SPACE
}

"An arbitrary precision signed decimal"
scalar BigDecimal

"An RFC-3339 compliant Full Date Scalar"
scalar Date

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

"A 64-bit signed integer"
scalar Long

scalar _FieldSet

input AbnormalSalesOrderConfirmedInput {
  "订单id"
  orderIds: [ID]!
}

"售后小票入参"
input AfterSalesTicketInput {
  "退货订单id"
  returnOrderId: Int!
}

input AllocateCancelInput {
  " 取消原因"
  cancelReason: String!
  " 调拨单id"
  flowId: ID!
}

input AllocateDetailInput {
  " 调拨单id"
  id: ID!
}

input AllocateInput {
  " 调拨类型"
  allocateType: AllocateType
  " appId"
  appId: Int
  " 商品信息"
  commodityList: [ComeWareHouseCommodityInput]
  " 费用信息"
  costInformation: [CostInformationDetailInput]
  " 调入商户id"
  merchantsOrgId: Int
  " 备注"
  remark: String
  " 调入仓库id"
  warehouseInId: ID
}

" 审核入库申请参数"
input AuditStockRecordInput {
  " 数据来源"
  dataFrom: String
  " 出入库记录主键Id"
  stockRecordId: ID
}

input BasePage {
  pageCurrent: Int
  pageSize: Int
}

" 创建批发订单详情"
input CalculateOrderDetailInput {
  " 库存ID"
  batchId: ID!
  " 购买数量"
  quantity: BigDecimal!
  " 库存ID"
  skuId: Int!
  " 单价"
  unitPrice: BigDecimal!
}

" 创建批发订单详情"
input CalculateOrderInput {
  calculateOrderDetails: [CalculateOrderDetailInput!]!
}

input CalculatorPaymentInput {
  "客户授信编码"
  creditCode: ID
  "选择的欠款单id"
  debitFormIdsList: [ID]
  "回款规则 1:总欠款自动回款， 2:指定欠款回款"
  settleRule: SettleRuleEnum
  "总回款金额"
  totalAmount: BigDecimal
}

input ChangePaymentStatusInput {
  " 回款单当前状态"
  auditStatus: PaymentStatus
  " 自动取消 传1 默认为0 非必填"
  autoCancel: Int
  " 费用单编码"
  billMainCode: String
  " 费用单id"
  billMainId: ID
  " 客户编码"
  creditCode: ID
  " 回款单id"
  paymentId: ID!
  " 操作备注"
  remarks: String
}

"仓库变更状态入参"
input ChangeWarehouseStatInput {
  "仓库id"
  id: ID!
  "仓库变更状态"
  status: WarehouseStatEnum!
}

input CheckRoleNameInput {
  roleName: String!
}

" 盘点仓库下的批次库存"
input CheckStockBatchInput {
  " 批次库存ID"
  batchIds: [ID!]!
}

" 盘点仓库下的批次库存"
input CheckStockInput {
  " 盘点仓库ID"
  warehouseId: ID!
}

" 校验用户存在入参"
input CheckUserInput {
  " 手机号"
  phone: String!
}

" 出库商品相关集合"
input ComeWareHouseCommodityInput {
  " 批次Id"
  batchId: ID
  " skuId"
  commoditySkuId: Int
  " 成本价格"
  costPrice: BigDecimal
  " 数量"
  quantity: BigDecimal
  " 单位Id"
  unitId: Int!
}

" 新增出库"
input ComeWareHouseInput {
  " 报损照片ids"
  breakagePictures: [FileInput]
  " 报损单ids"
  breakageReceipts: [FileInput]
  " 商品信息"
  comeWareHouseCommodity: [ComeWareHouseCommodityInput]
  " 出库类型"
  entryWareHouseType: OutBoundType
  " 备注"
  remark: String
  " 所属厂库id"
  wareHouseId: ID
}

" 获取商品别名分页列表条件入参"
input CommodityAliasQueryInput {
  "商品别名"
  commodityCategoryAlias: String
  " 商品品类id"
  commodityCategoryId: Int
  pageCurrent: Int
  pageSize: Int
}

input CommodityAliasUpdateInput {
  " SKU别名"
  commoditySkuAlias: String
  " 商品别名id"
  id: Int!
}

input CommodityGuidePriceInput {
  " 商品SkuId "
  commoditySkuId: Int
  " 最低指导价 "
  minGuidePrice: BigDecimal
  " 指导价单位Id "
  priceUnitId: Int
}

"商品标签入参"
input CommodityLabelInput {
  "商品批次列表,当品类列表为空时默认查询批次品类"
  batchIds: [ID]
  "品类id"
  categoryId: [Int]
  "状态 1:启用 99:禁用,默认查询所有"
  status: Int
}

" 获取商品筛选条件入参"
input CommoditySelectedInput {
  " 商品ID"
  commodityId: Int!
  " 库存为0是否隐藏，默认不隐藏"
  hideNoStock: Boolean
}

"  查询spec入参"
input CommoditySpecInput {
  " 库存为0是否隐藏，默认不隐藏"
  hideNoStock: Boolean
  spuId: Int
}

" 查询SPU入参"
input CommoditySpuInput {
  categoryId: Int
  " 库存为0是否隐藏，默认不隐藏"
  hideNoStock: Boolean
}

"商品单位类型入参"
input CommodityUnitTypeInput {
  "商品类型"
  commodityType: CommodityTypeEnum
}

input ConfirmCommodityGuidePriceInput {
  " 商品SkuId "
  commoditySkuIdList: [Int!]!
}

"确认入库信息"
input ConfirmEntryInput {
  " 数据来源"
  dataFrom: String
  " 调拨单id"
  flowId: ID
  " 标记商品批次id"
  markStockBatchIds: [ID]
  "  备注信息"
  remark: String
  " 出入库记录主键Id"
  stockRecordId: ID
  "未配置单位的商品列表"
  unitNotConfiguredCommodity: [StockApplyCommodityList]
  " 厂库 Id"
  wareHouseId: ID
}

input CostInformationDetailInput {
  " 金额"
  amount: BigDecimal
  " 车牌"
  board: String
  " 费用类型"
  costType: CostType
  " 备注"
  note: String
  " 付款方式"
  payMode: PayMode
  " 联系电话"
  phone: String
  " 供应商"
  supplierId: Int
  " 供应商名称"
  supplierName: String
}

" 列表分页入参"
input CostReportFormPageInput {
  costReportFormQueryInput: CostReportFormQueryInput
  " 分页入参"
  pageInput: BasePage!
}

" 列表通用查询入参"
input CostReportFormQueryInput {
  " 批次号"
  batchStockCode: String
  " 订单编号"
  orderCode: String
  " 组织ID"
  orgId: Long
  " 采购时间终"
  purchaseEndTime: Long
  " 采购时间起"
  purchaseStartTime: Long
  " 供应商名称"
  supplierName: String
  " 入库类型"
  warehouseType: String
}

input CountCreditCustomerInput {
  "模糊搜索"
  fuzzySearch: String
}

input CreatPaymentInput {
  "客户授信编码"
  creditCode: ID
  " 客户Id"
  customerId: Int
  " 欠款单ids"
  debitFormIdsList: [ID]
  " 旧的回款单id,编辑回款单时传"
  oldPaymentId: ID
  " 支付信息"
  paymentContentsList: [PaymentContentInput]
  " 备注"
  remarks: String
  " 回款规则 1:总欠款自动回款， 2:指定欠款回款"
  settleRule: SettleRuleEnum
  " 证明资料"
  supportingMaterialsList: [FileInput]
}

"创建客户参数"
input CreateCustomerInput {
  "客户别名"
  alias: String
  " 客户属性"
  attribute: AttributeTypeEnum
  " 所属组织id"
  belongOrganizationId: Int
  " 法人"
  corporation: String
  " 客户联系人"
  customerContacts: [CustomerContactInput]
  "客户类型(1:个人，2：公司，3：零售)"
  customerType: CustomerType
  "客户关联用户id"
  customerUserId: Int
  " 客户证明资料"
  fileRecord: [FileRecordInput]
  " 财务系统编码"
  financialSystemCode: String
  " 客户身份证号"
  idNumber: String
  "客户名称"
  name: String
  "身份证其他信息(json字符串)"
  otherInfoOfIdCard: String
  "客户电话"
  phone: String
  " 纳税人识别号"
  taxpayerIdentificationNumber: String
}

" 创建团队成员"
input CreateMemberInput {
  " 用户Id"
  userId: Int!
}

input CreateRoleInput {
  "角色名称"
  roleName: String!
}

" 客户欠款查询条件 "
input CreditCustomerInput {
  " 欠款总额排序 "
  creditTotalAmountSortRule: SortRuleType
  " 客户属性 "
  customerAttribute: AttributeTypeEnum
  " 客户名称 "
  customerName: String
  " 统计维度 "
  dimensionIdentification: DimensionIdentification
  " 结束时间 "
  endTime: Long
  " 开始时间 "
  startTime: Long
}

" 客户欠款查询条件带分页 "
input CreditCustomerQueryInput {
  " 条件参数 "
  condition: CreditCustomerInput
  " 分页条件 "
  page: Page
}

input CreditEnableStatusInput {
  " 授信编码"
  creditCode: ID!
  " 启用禁用状态 1：启用 99：禁用"
  operationStatus: Int!
  " 备注"
  remarks: String!
}

"当前单位转换对象input"
input CurrentUnitConversionInput {
  "换算数量"
  convertQuantity: BigDecimal
  "换算单位Id"
  convertUnitId: Int
  "skuId"
  skuId: Int
  "单位Id"
  unitId: Int
  "单位数量"
  unitQuantity: BigDecimal
}

input CustomerBaseInfoInput {
  "名称"
  name: String
  "电话号码"
  phone: String
  "客户类型(必填)"
  type: CustomerType
}

" 客户联系人"
input CustomerContactInput {
  "联系人别名"
  alias: String
  "关联用户id"
  contactUserId: Int
  "客户详情id(新增必填)"
  customerDetailId: Int
  "分类文件列表"
  fileRecord: [FileRecordInput]
  "客户联系人id(修改必填)"
  id: Int
  "联系人身份证号"
  idNumber: String
  "联系人姓名"
  name: String
  "身份证其他信息(json字符串)"
  otherInfoOfIdCard: String
  "联系人电话"
  phone: String
  "备注"
  remark: String
}

input CustomerCreditCreateInput {
  " 额度"
  creditLine: BigDecimal!
  " 账期"
  creditPeriod: Int!
  " 客户id"
  customerId: ID!
  " 启用禁用状态 1：启用 99：禁用"
  operationStatus: Int!
  " 证明资料"
  supportingMaterials: [FileInput]!
}

input CustomerCreditEditInput {
  " 授信编码"
  creditCode: ID!
  " 额度"
  creditLine: BigDecimal!
  " 账期"
  creditPeriod: Int!
  " 启用禁用状态 1：启用 99：禁用"
  operationStatus: Int!
  " 备注"
  remarks: String!
  " 证明资料"
  supportingMaterials: [FileInput]!
}

" 客户详情查询条件对象带分页 "
input CustomerCreditInfoInput {
  " 客户id "
  customerId: Long
  " 欠款单号 "
  debitFormCode: String
  " 欠款状态 "
  debtOrderStatusEnum: [DebtOrderStatusEnum]
  " 分页参数 "
  page: Page
  " 销售单号 "
  saleOrderCode: String
  " 销售结束时间 "
  salesEndDate: Long
  " 销售开始日期 "
  salesStartDate: Long
}

input CustomerDebtCountInput {
  "客户属性类型"
  attributeType: AttributeTypeEnum
  customerIds: [Int]
  "创建时间起始"
  debtCreateTimeBegin: Long
  "创建时间截至"
  debtCreateTimeOver: Long
}

"客户欠款明细入参"
input CustomerDebtDetailInput {
  "客户id"
  customerId: Int!
  "创建时间起始-销售时间"
  debtCreateTimeBegin: Long
  "创建时间截至-销售时间"
  debtCreateTimeOver: Long
  pageCurrent: Int
  pageSize: Int
  "创建时间排序规则"
  sortRule: SortRuleType
}

input CustomerEditInput {
  "客户别名"
  alias: String
  " 客户属性"
  attribute: AttributeTypeEnum
  " 所属组织id"
  belongOrganizationId: Int
  " 法人"
  corporation: String
  "客户类型(1:个人，2：公司，3：零售)"
  customerType: CustomerType
  "客户关联用户id"
  customerUserId: Int
  " 客户证明资料"
  fileRecord: [FileRecordInput]
  " 财务系统编码"
  financialSystemCode: String
  " 客户id"
  id: Int
  " 客户身份证号"
  idNumber: String
  "客户名称"
  name: String
  "身份证其他信息(json字符串)"
  otherInfoOfIdCard: String
  "客户电话"
  phone: String
  " 纳税人识别号"
  taxpayerIdentificationNumber: String
}

input CustomerListInput {
  " 客户属性"
  attribute: AttributeTypeEnum
  " 模糊搜索"
  fuzzy_search: String
}

"获取客户列表入参"
input CustomerPageInput {
  " 客户属性"
  attribute: AttributeTypeEnum
  " 创建时间起始"
  detailCreateTimeBegin: Long
  " 创建时间截至"
  detailCreateTimeOver: Long
  " 是否查询包含禁用客户 不传默认true为查询"
  disableQuery: Boolean
  " 财务系统编码"
  financialSystemCode: String
  "模糊搜索"
  fuzzySearch: String
  " 客户名称"
  name: String
  " 查询零售客户"
  obtainRetailCustomers: Boolean
  pageCurrent: Int
  pageSize: Int
  " 手机号"
  phone: String
}

input CustomerQualificationInput {
  " 资产说明"
  assetDescription: String
  " 经营情况说明"
  businessCondition: String
  " 经营时长"
  businessDuration: BusinessDuration
  " 经营规模"
  businessScale: BusinessScale
  " 经营类型"
  businessTypes: [QualificationBusinessType]
  " 客户详情Id"
  customerDetailId: Int
  " 资质证明文件"
  files: [FileInput]
  " 主键"
  id: Int
  " 是否长期合作 1.是 0.否"
  longTermCooperation: Int
  " 日常拿货情况说明"
  purchaseCondition: String
  " 销售渠道说明"
  salesChannels: String
  " 是否签订协议合同 1.是 0.否"
  signAgreement: Int
  " 其他经营类型说明"
  typeRemark: String
}

"欠款统计"
input DebtCountInput {
  "客户属性类型"
  attributeType: AttributeTypeEnum!
  "当前月份"
  currentMonth: Int
  "当前年份"
  currentYear: Int
}

"欠款单明细入参"
input DebtOrderDetailInput {
  "欠款单id"
  debitFormId: ID!
}

"欠款查询入参"
input DebtQueryInput {
  "客户属性类型"
  attributeType: AttributeTypeEnum
  "客户名称"
  customerName: String
  pageCurrent: Int
  pageSize: Int
}

input DeleteCustomerContactInput {
  "客户详情id"
  customerDetailId: Int
  "客户联系人id"
  id: Int
}

" 下载入参"
input DownloadInput {
  " 退货订单id"
  returnOrderId: Int
}

input EnableOrDisableCustomerInput {
  " 客户detailId"
  customerId: Int!
  " 启用标识；1启用；99：禁用"
  enable: Int!
}

" 入库商品相关集合"
input EntryWareHouseCommodityInput {
  " 商品品类id 描述"
  commodityCategoryId: Int
  " 商品sku"
  commoditySkuId: Int
  " sku名称"
  commoditySkuName: String
  " 商品spu"
  commoditySpuId: Int
  " 数量"
  quantity: BigDecimal
  " 单位Id"
  unitId: Int!
}

" 新增入库"
input EntryWareHouseInput {
  " 商品信息"
  entryWareHouseCommodity: [EntryWareHouseCommodityInput!]!
  " 入库类型"
  entryWareHouseType: WareHouseType
  " 供应商名称"
  provideName: String
  " 联系电话"
  providePhone: String
  " 备注"
  remark: String!
  " 总数量"
  totalQuantity: BigDecimal
  " 所属厂库id"
  wareHouseId: ID
}

input ExistConditionInput {
  " 别名"
  alias: String
  " 公司全称"
  companyName: String
  " 财务系统编码"
  financialSystemCode: String
  " 客户id"
  id: Int
  " 客户身份证号"
  idNumber: String
  " 手机号"
  phone: String
  " 纳税人识别号"
  taxpayerIdentificationNumber: String
  "客户类型(1:个人，2：公司，3：零售)"
  type: CustomerType!
}

"通用文件"
input FileInput {
  "文件ID"
  fileId: String
  "文件上传时间 GMT+8 yyyy-MM-dd HH:mm:ss"
  fileUploadTime: Long
  "文件地址"
  fileUrl: String
  "文件名称"
  filename: String
}

input FileRecordInput {
  fileType: FileType
  files: [FileInput]
}

input FlowTransferCostDetailInput {
  " 调拨单Id"
  flowId: ID!
}

"获取权限"
input GetPermissionInput {
  " 权限类型 1 后台管理 2 app 3消息"
  menuType: Int
}

input GetRoleDataRelInput {
  "数据权限类型"
  dataType: DataType
  "角色ID"
  id: Int!
}

input ListControlCommoditySkuInput {
  " 商品品类Id "
  commodityCategoryId: Int!
  " 商品名称 "
  commoditySkuName: [String]
}

input ListRecommendTagInput {
  " 商品品类Id "
  commodityCategoryId: Int!
}

" 账号登陆入参"
input LoginByAccountInput {
  " 密码"
  password: String!
  " 用户账号"
  userAccount: String!
}

" 登陆参数"
input LoginInput {
  " 验证码"
  code: String!
  " 手机号"
  phone: String!
}

" 删除团队成员"
input MemberIdInput {
  " 成员Id"
  id: Int!
}

"获取团队列表入参"
input MemberPageInput {
  pageCurrent: Int!
  pageSize: Int!
}

" 客户欠款查询条件 "
input MerchantCustomerCreditInput {
  "授信额度"
  creditLineSortRule: SortRuleType
  "授信账期"
  creditPeriodSortRule: SortRuleType
  " 欠款总额排序 "
  creditTotalAmountSortRule: SortRuleType
  " 客户名称 "
  customerName: String
  " 财务系统编码 "
  financialSystemCode: String
  " 操作结束时间 "
  operatorEndTime: Long
  " 操作人 "
  operatorName: String
  " 操作开始时间 "
  operatorStartTime: Long
  " 逾期欠款总额排序 "
  overdueTotalAmountSortRule: SortRuleType
  " 使用状态(1：启用，99：禁用) "
  useStatus: Int
}

" 客户欠款查询条件带分页 "
input MerchantCustomerCreditQueryInput {
  " 查询条件 "
  condition: MerchantCustomerCreditInput
  " 分页参数 "
  page: Page
}

input MerchantInput {
  id: Int!
}

" 采购费用-运杂费"
input MiscellaneousFreightInput {
  " 运费金额"
  costPrice: BigDecimal
  " 供应商"
  costSupplier: String
  " 供应商id"
  costSupplierId: Int
  " 运费类型id"
  costTypeId: Int
  " 付款方式"
  payMode: PayMode
  " 运杂费备注"
  remark: String
}

" 修改支付方式"
input ModifyPaymentInput {
  " 订单Id"
  orderId: Int!
  " 支付方式"
  orderPaymentsDetails: [OrderPaymentDetailListInput!]!
  " 修改原因"
  reason: String!
}

input OrderIdInput {
  " 订单取消原因"
  cancelReason: String
  orderId: Int!
}

input OrderInfoInput {
  " 订单ID"
  orderId: Int!
}

" 订单提货入参"
input OrderPartPickInput {
  " 订单id"
  orderId: Int!
  " sku 提货信息"
  skuPickDetail: [SkuPickDetail!]
}

" 订单收银统计入参"
input OrderPaymentCountInput {
  " 收银员id"
  cashierIds: [Int]
  " 收银结束时间"
  endTime: Long
  " 收银开始时间"
  startTime: Long
}

input OrderPaymentDetailListInput {
  " 实收金额"
  paidAmount: BigDecimal!
  " 订单支付方式"
  paymentType: PaymentType!
}

" 订单收银入参"
input OrderPaymentInput {
  " 订单收银备注"
  cashRemark: String
  " 订单Id"
  orderId: Int!
  orderPaymentsDetails: [OrderPaymentDetailListInput!]!
}

" 订单收银分页查询入参"
input OrderPaymentPageInput {
  " 收银员id"
  cashierIds: [Int]
  " 收银结束时间"
  endTime: Long
  "当前页码"
  pageCurrent: Int
  "每页显示条数"
  pageSize: Int
  " 支付方式"
  paymentType: PaymentType
  " 收银开始时间"
  startTime: Long
}

" 列表分页入参"
input OrderReportFormPageInput {
  orderReportFormQueryInput: OrderReportFormQueryInput
  " 分页入参"
  pageInput: BasePage!
}

" 列表通用查询入参"
input OrderReportFormQueryInput {
  " 收银员"
  cashierName: String
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: CustomerType
  " 商户ID"
  merchantId: Long
  " 订单号"
  orderCode: String
  " 支付时间终"
  payEndTime: Long
  " 支付方式"
  payMethod: [PaymentType]
  " 支付时间起"
  payStartTime: Long
  " 销售员"
  salesmanName: String
  " 订单状态"
  status: OrderReportQueryStatus
}

" 订单明细查询入参"
input OrderReportInput {
  " 订单ID"
  orderId: Int!
}

input OrgTreeInput {
  " 组织名称"
  orgName: String
  " 是否禁用用户所属组织"
  selfDisable: Boolean
}

input OrgUserListInput {
  "用户组织Id"
  orgId: Int
  "用户状态"
  userStatus: UserStatusEnum
}

" 分页查询组织用户参数"
input OrgUserPageInput {
  "组织Id"
  orgId: Int!
  pageCurrent: Int!
  pageSize: Int!
  "用户名"
  userName: String
  "用户状态"
  userStatus: UserStatusEnum
}

" 列表分页入参"
input OutBoundReportFormPageInput {
  outBoundReportFormQueryInput: OutBoundReportFormQueryInput
  " 分页入参"
  pageInput: BasePage!
}

" 列表通用查询入参"
input OutBoundReportFormQueryInput {
  " 批次号"
  batchCode: String
  " 商品sku 名称"
  commoditySkuName: String
  " 出库单号"
  orderCode: String
  " 出库时间终"
  outBoundEndTime: Long
  " 出库时间起"
  outBoundStartTime: Long
  " 出库类型"
  outBoundType: OutBoundType
  " 所属仓库"
  warehouseId: ID
}

" 图片打包下载"
input PackageDownloadInput {
  " 事务id"
  businessId: ID!
}

"分页请求参数"
input Page {
  "当前页"
  pageCurrent: Int
  "页码大小"
  pageSize: Int
}

input PageAbnormalSalesOrderInput {
  "查询结束时间"
  endTime: Long
  "确认状态"
  orderStatus: AbnormalSalesOrderStatus!
  "当前页"
  pageCurrent: Int!
  "页码大小"
  pageSize: Int!
  "查询开始时间"
  startTime: Long
}

input PageAllocateCostInput {
  " 费用单状态"
  allocateCostStatus: AllocateCostEnum
  " 审核状态"
  approvalStatus: AllocateApprovalStatusEnum
  " 调拨运杂费单号"
  costCode: String
  " 调入组织"
  orgInName: String
  " 调出组织"
  orgOutName: String
  " 关联出库单号"
  outboundCode: String
  " 提交时间终"
  outboundTimeEnd: Long
  " 提交时间始"
  outboundTimeStart: Long
  " 当前页码"
  pageCurrent: Int
  " 分页条数"
  pageSize: Int
  " 出入库类型"
  stockRecordType: StockRecordType!
  " 调拨单号"
  transferCode: String
}

input PageAllocateOrderInput {
  " 调拨单状态"
  allocateStatus: [AllocateStatus]
  " 批次号"
  batchCode: String
  " 柜次"
  cabinetBatchCode: String
  " 调入组织"
  orgInName: String
  " 调出组织"
  orgOutName: String
  " 当前页码"
  pageCurrent: Int
  " 分页条数"
  pageSize: Int
  " 出/入库单号"
  stockRecordCode: String
  " 出入库类型"
  stockRecordType: StockRecordType!
  " 查询时间止"
  timeEnd: Long
  " 查询时间起"
  timeStart: Long
  " 仓库id"
  warehouseId: ID
  " 入库类型"
  warehouseInType: AllocateOrderWarehouseInTypeEnum
}

input PageAllocateStockRecordInput {
  " 调拨单状态"
  allocateStatus: [AllocateStatus]
  " 出库时间止"
  outboundTimeEnd: Long
  " 出库时间起"
  outboundTimeStart: Long
  pageCurrent: Int
  pageSize: Int
  " 出入库类型"
  stockRecordType: StockRecordType!
}

input PageBreakageRecordInput {
  " 批次号"
  batchCode: String
  " 出库订单号"
  orderCode: String
  pageCurrent: Int
  pageSize: Int
  " 商品名称"
  skuName: String
  " 出库时间终"
  stockOutTimeEnd: Long
  " 出库时间始"
  stockOutTimeStart: Long
}

input PageCreditCustomerInput {
  "是否授信,true:已授信,false:未授信"
  creditFlag: Boolean!
  "模糊搜索"
  fuzzySearch: String
  pageCurrent: Int
  pageSize: Int
}

input PageFlowTransferCostInput {
  " 调拨费用单状态"
  allocateCostStatus: [AllocateCostStatus]
  " 入库时间止"
  endTime: Long
  pageCurrent: Int
  pageSize: Int
  " 入库时间起"
  startTime: Long
  " 出入库类型"
  stockRecordType: StockRecordType!
}

" web退货分页查询"
input PageInput {
  " 客户名称"
  customerName: String
  " 当前页码"
  pageCurrent: Int
  " 每页显示条数"
  pageSize: Int
  " 退货结束时间"
  returnGoodsTimeEnd: Long
  " 退货开始时间"
  returnGoodsTimeStart: Long
  " 退货单号"
  returnOrderCode: String
  " 原销售单号"
  saleOrderCode: String
}

input PageOrderByCustomerInput {
  " 联系人id(公司类型的客户)"
  contactId: Int
  " 客户id"
  customerId: Int
  " 开单时间终"
  orderTimeEnd: Long!
  " 开单时间起"
  orderTimeStart: Long!
  pageCurrent: Int
  pageSize: Int
}

input PageOrderInput {
  " 查询关键字(订单支付码或者客户名称)"
  keywords: String
  pageCurrent: Int
  pageSize: Int
  " 订单查询状态"
  queryStatus: OrderQueryStatus
  " 订单查询类型"
  queryType: OrderQueryType!
}

input PageOrgInput {
  appId: Int
  keywords: String
  pageCurrent: Int
  pageSize: Int
}

input PagePaymentInput {
  " 状态"
  auditStatusList: [PaymentStatus]
  " 结束时间"
  expireDate: Long
  pageCurrent: Int
  pageSize: Int
  " 是否自己创建的(录入,审核)"
  personal: Boolean!
  " 开始时间"
  startDate: Long
}

" 采购订单报表列表查询"
input PagePurchaseCostReportInput {
  " 分页入参"
  pageInput: BasePage!
  " 采购订单报表列表查询参数"
  purchaseCostQueryInput: PurchaseCostQueryInput
}

input PageRoleInput {
  pageCurrent: Int!
  pageSize: Int!
  "角色名称"
  roleName: String
}

input PageStockRecordInput {
  pageCurrent: Int
  pageSize: Int
  " 出入库记录查询类型"
  queryType: StockRecordQueryType
  " 出入库类型"
  type: [WarehouseAllType]
  " 仓库id"
  warehouseId: ID
}

input PageSupplierInput {
  " 供应商属性"
  attribute: AttributeTypeEnum
  " 创建时间终"
  createTimeEnd: Long
  " 创建时间始"
  createTimeStart: Long
  " 财务系统编码"
  financialSystemCode: String
  pageCurrent: Int
  pageSize: Int
  " 联系电话"
  phoneNum: String
  " 供应商名称"
  supplierName: String
  " 供应商类型id"
  supplierTypeId: [Int]
  " 纳税人识别号"
  tfn: String
}

input PaymentContentInput {
  " 支付金额"
  money: BigDecimal
  " 到账时间"
  paymentTime: Long
  " 支付方式 枚举"
  paymentWayEnum: PaymentType
  " 转账账号"
  transferAccount: String
}

input PaymentDetailInput {
  "回款单id"
  paymentId: ID!
}

input PaymentStatusCountInput {
  " 是否自己创建的(录入,审核)"
  personal: Boolean!
}

" 采购费用管理分页入参"
input PurchaseCostPageInput {
  " 当前页码"
  pageCurrent: Int
  " 每页显示条数"
  pageSize: Int
  " 采购时间终"
  purchaseOrderTimeEnd: Long
  " 采购时间起"
  purchaseOrderTimeStart: Long
  " 采购费用状态"
  status: CostStatusEnum
}

" 入参请求"
input PurchaseCostQueryInput {
  " 采购运杂费单号"
  purchaseCostCode: String
  " 关联采购单号"
  purchaseOrderCode: String
  " 采购人"
  purchaserUserName: String
  " 复核人"
  reviewUserName: String
  " 提交时间终"
  submitEndTime: Long
  " 提交时间起"
  submitStartTime: Long
}

" 采购费用管理提交入参"
input PurchaseCostSubmitInput {
  " 采购费用单id"
  billId: ID
}

" 采购费用管理修改入参"
input PurchaseCostUpdateInput {
  " 采购费用单id"
  billId: ID
  " 采购杂运费"
  miscellaneousFreightInput: [MiscellaneousFreightInput]
}

" 采购订单取消入参"
input PurchaseOrderCancelInput {
  " 采购订单id"
  orderId: ID!
}

" 采购订单商品明细入参"
input PurchaseOrderCommodityInsertInput {
  " 商品SKU ID"
  commoditySkuId: Int
  " 商品数量"
  quantity: BigDecimal
  " 单位id"
  unitId: Int!
  " 商品单价"
  unitPrice: BigDecimal
}

"""
---------------- 入参 --------------------
 采购费用明细
"""
input PurchaseOrderCostInput {
  " 采购单id"
  billId: ID
}

" 采购订单明细查询入参"
input PurchaseOrderDetailInput {
  " 采购订单id"
  orderId: ID!
}

" 采购订单报表采购单查询"
input PurchaseOrderIdInput {
  " 采购订单id"
  purchaseOrderId: ID
}

" 采购订单创建入参"
input PurchaseOrderInsertInput {
  " 采购杂运费"
  miscellaneousFreightInput: [MiscellaneousFreightInput]
  " 商品信息"
  purchaseOrderCommodityInsertInputs: [PurchaseOrderCommodityInsertInput!]!
  " 备注信息"
  remark: String
  " 供应商id"
  supplierId: Int!
}

" 采购订单列表分页查询入参"
input PurchaseOrderPageInput {
  " 当前页码"
  pageCurrent: Int
  " 每页显示条数"
  pageSize: Int
  " 采购订单状态：TO_WAREHOUSED：待提交，COMPLETE：待入库，COMPLETE：已完成，CANCEL：已取消"
  purchaseOrderStatusEnum: FlowApplyQueryStatusEnum
}

" 采购订单提交入参"
input PurchaseOrderSubmitInput {
  " 采购订单id"
  orderId: ID!
}

" 采购订单修改入参"
input PurchaseOrderUpdateInput {
  " 采购杂运费"
  miscellaneousFreightInput: [MiscellaneousFreightInput]
  " 订单id"
  orderId: ID
  " 采购订单商品信息集合"
  purchaseOrderCommodityInsertInputs: [PurchaseOrderCommodityInsertInput!]!
  " 备注信息"
  remark: String
}

input QueryCreditCustomerInput {
  " 客户id"
  customerId: ID!
}

input QueryCustomerInput {
  " 客户类型 1:个人 2:公司"
  customerType: CustomerType
  id: Int
  " 客户名称"
  name: String
  " 手机号"
  phone: String
}

"---------------- 入参 ------------------"
input QuerySupplierBaseInfoInput {
  "供应商名称"
  supplierName: String!
}

input RealtimeStockInput {
  " 品种id"
  varietyQuery: [VarietyInput]
  " 仓库id"
  warehouseId: [ID]
}

input RecognizeIdCardInput {
  fileId: String!
}

" 商户欠款查询条件 "
input RegionCreditInput {
  " 统计维度 "
  dimensionIdentification: DimensionIdentification
  " 结束时间 "
  endTime: Long
  " 开始时间 "
  startTime: Long
}

" 商户欠款查询条件带分页 "
input RegionCreditQueryInput {
  " 条件参数 "
  condition: RegionCreditInput
  " 分页条件 "
  page: Page
}

input RejectApplyInput {
  " 数据来源"
  dataFrom: String
  " 驳回理由"
  rejectReason: String
  " 入库申请id"
  stockRecordId: ID
}

input ReturnCommodityDetailInput {
  " 订单详情id"
  detailId: Int!
  " 退货原因"
  reasonsForReturn: String
  " 退货数量"
  returnedQuantity: BigDecimal!
  " 销售数量"
  salesQuantity: BigDecimal!
  " 销售单价"
  salesUnitPrice: BigDecimal!
  " 单位Id"
  unitId: Int!
}

" web 详情接口"
input ReturnOrderDetailInput {
  " 退货订单id"
  returnOrderId: Int
}

input ReturnOrderIdInput {
  " 退货订单id"
  returnOrderId: Int!
}

input ReturnOrderInput {
  " 售后方式"
  afterSaleType: AfterSaleType
  " 客户id"
  customerId: Int
  " 订单id"
  orderId: Int
  " 照片"
  pictures: [FileInput]
  " 退货备注"
  remark: String
  " 退款金额修改原因"
  returnAmountModifyReason: String
  " 退货商品"
  returnCommodityDetailInput: [ReturnCommodityDetailInput]
  " 金额合计"
  totalAmount: BigDecimal
}

" 列表分页入参"
input SalesReportFormPageInput {
  " 分页入参"
  pageInput: BasePage!
  salesReportFormQueryInput: SalesReportFormQueryInput
}

" 列表通用查询入参"
input SalesReportFormQueryInput {
  " 批次号"
  batchStockCode: String
  " 客户名称"
  customerName: String
  " 客户类型"
  customerType: CustomerType
  " 商户ID"
  merchantId: Long
  " 手工单编号"
  orderCode: String
  " 销售时间终"
  payEndTime: Long
  " 付款类型"
  payMethod: [PaymentType]
  " 销售时间起"
  payStartTime: Long
}

input SalesStatisticDetailInput {
  " 品类id"
  commodityCategoryId: Int
  " 品种id"
  commodityVarietyId: Int
}

input SalesStatisticOrderInput {
  " 订单类型"
  orderType: SalesStatisticOrderEnum!
  pageCurrent: Int
  pageSize: Int
}

input SearchStockSkuInput {
  " 商品名称"
  skuName: String
}

" 查找用户信息"
input SearchUserInput {
  " 关键词：手机号/用户名称"
  keyword: String
}

" 发送验证码参数"
input SendCodeMsgInput {
  " 手机号"
  phone: String!
}

input SetCommodityGuidePriceInput {
  " 商品管控id "
  commodityControlId: ID!
  " 商品SkuId "
  commoditySkuIdList: [Int!]!
  " 最低指导价 "
  minGuidePrice: BigDecimal!
  " 指导价单位Id "
  priceUnitId: Int!
}

" 加入购物车信息入参"
input ShoppingCarCreateInput {
  " 购买数量"
  quantity: BigDecimal!
  "数量单位类型"
  quantityUnitType: Int
  " 库存ID"
  stockId: ID!
  " 单价"
  unitPrice: BigDecimal!
}

input ShoppingCarDeletedInput {
  shoppingCarIds: [Int!]!
}

" 修改购物车信息入参"
input ShoppingCarUpdateInput {
  " 购买数量"
  quantity: BigDecimal!
  "数量单位类型"
  quantityUnitType: Int
  " 购物车信息ID"
  shoppingCarId: Int!
  " 单价"
  unitPrice: BigDecimal!
}

input SkuBatchInput {
  " 不查询的sku批次"
  excludeSkuBatchId: [ID]
  skuId: Int!
}

input SkuGroupByBatchInput {
  " 批次id"
  batchId: [ID]
}

input SkuOptionQueryInput {
  optionIds: [Int!]!
}

" sku提货明细"
input SkuPickDetail {
  " 批次id"
  batchId: ID!
  " skuId"
  skuId: Int!
  " 提货数量"
  skuQuantity: BigDecimal!
}

input SpecOptionInput {
  " 选项id"
  optionIds: [Int]
  " 规格id"
  spec: Int
}

"入库申请：商品列表"
input StockApplyCommodityList {
  " 数量"
  quantity: BigDecimal!
  " 商品批次id"
  stockBatchId: ID!
  " 单位Id"
  unitId: Int!
}

" 仓库下的批次库存"
input StockBatchInput {
  stockQueryType: StockQueryType
  warehouseId: ID
}

" 批发开单商品信息查询入参"
input StockCommodityInput {
  " 品类id"
  commodityCategoryId: Int
  " 商品id"
  commodityId: Int
  " SKU别名"
  commoditySkuName: String
  " 商品规格选项 ID集合"
  commoditySpecOptionIds: [SpecOptionInput]
  pageCurrent: Int
  pageSize: Int
  " 仓库id"
  warehouseId: ID
}

"库存数量单位对象input"
input StockQuantityUnitInput {
  "基本单位数量"
  basicQuantity: BigDecimal
  "基本单位"
  basicType: Int
  "skuId"
  skuId: Int
  "辅助单位数量"
  subQuantity: BigDecimal
  "辅助单位"
  subType: Int
}

input StockSkuInput {
  " 商品名称"
  skuName: String
  " 仓库id"
  warehouseId: ID!
}

input StockTemporaryDetailInput {
  "批次id"
  stockBatchId: ID!
  "盘点数量"
  temporaryQuantity: BigDecimal!
  "单位Id"
  unitId: Int
}

input StockTemporaryInput {
  " 暂存盘点详情"
  temporaryDetails: [StockTemporaryDetailInput!]!
  " 暂存盘点信息仓库ID"
  wareHouseId: ID!
}

input StockTypeOptionInput {
  " 出入库类型"
  stockRecordType: StockRecordType
}

" 供应商校验接口入参"
input SupplierCheckInput {
  "供应商属性"
  attribute: AttributeTypeEnum
  " 检验的字段类型"
  checkTypeEnum: CheckTypeEnum!
  " 关键字校验"
  keyWord: String!
  " 供应商id"
  supplierId: Int
  " 供应商类型"
  supplierType: Int
}

" 供应商新增入参"
input SupplierInsertInput {
  " 供应商属性(1 内部供应商，2外部供应商)"
  attribute: AttributeTypeEnum!
  " 财务系统编码"
  financialSystemCode: String
  " 门牌号"
  houseNum: String
  " 联系电话(外部供应商必传)"
  phoneNum: String
  " 备注信息"
  remark: String
  " 供应商地址"
  supplierAddress: String
  " 供应商id"
  supplierId: Int
  " 供应商名称"
  supplierName: String!
  " 供应商所属组织(内部供应商必传)"
  supplierOrgId: Int
  " 供应商简称"
  supplierShortName: String
  " 供应商类型id"
  supplierTypeId: Int!
  " 纳税人识别号"
  tfn: String
}

" 供应商列表信息查询入参"
input SupplierListInput {
  " 关键字查询"
  keyWord: String
  " 供应商类型id"
  supplierTypeId: [Int]
}

" 客户欠款查询条件 "
input TableHeadInput {
  " 统计维度 "
  dimensionIdentification: DimensionIdentification
  " 结束时间 "
  endTime: Long
  " 开始时间 "
  startTime: Long
}

" 盘点商品详情"
input TakeStockCommodityDetailInput {
  " 批次库存id"
  batchStockId: ID
  " 库存SKU ID"
  commoditySkuId: Int
  " 异常原因"
  reason: String
  " 系统库存数量"
  systemQuantity: StockQuantityUnitInput
  " 盘点库存数量"
  takeStockQuantity: CurrentUnitConversionInput
}

" 盘点详情"
input TakeStockDetailInput {
  " 盘点日期"
  checkTime: Long
  " 盘点仓库"
  checkWareHouseId: ID
  " 备注"
  remark: String
  takeStockCommodityDetailInput: [TakeStockCommodityDetailInput]
}

" 盘点记录详情"
input TakeStockRecordDetailInput {
  " 盘点id"
  checkId: ID
}

" 盘点记录"
input TakeStockRecordInput {
  " 截止时间"
  expireDate: Long
  pageCurrent: Int
  pageSize: Int
  " 起始时间"
  startDate: Long
  " 库存状态(10:正常，20：异常)"
  totalStatus: Int
  " 盘点仓库"
  warehouseId: ID
}

"小票启停应入参"
input TicketEnableInput {
  "启停状态"
  status: Int!
  "小票id"
  ticketId: Int!
}

input UpdateCostInformationInput {
  " 费用详情"
  costInformationDetail: [CostInformationDetailInput]
  " 调拨单id"
  flowId: ID!
}

input UpdateDataRelInput {
  "数据权限IDs"
  dataIds: [String]!
  "数据权限类型"
  dataType: DataType!
  "角色ID"
  id: Int!
}

" 修改团队成员"
input UpdateMemberInput {
  " 成员Id"
  id: Int!
}

" 修改密码入参"
input UpdatePasswordInput {
  " 旧密码"
  oldPassword: String!
  " 新密码"
  password: String!
  " 用户id"
  userId: Int!
}

input UpdatePaymentInput {
  " 回款单状态"
  auditStatus: PaymentStatus
  " 费用单id"
  billMainId: ID
  "客户编码"
  creditCode: ID
  " 客户Id"
  customerId: Int
  " 欠款单ids"
  debitFormIdsList: [ID]
  " 支付信息"
  paymentContentsList: [PaymentContentInput]
  " 回款单id"
  paymentId: ID
  " 备注"
  remarks: String
  " 回款规则 1:总欠款自动回款， 2:指定欠款回款"
  settleRule: SettleRuleEnum
  " 证明资料"
  supportingMaterialsList: [FileInput]
}

input UpdatePowerRelInput {
  "角色ID"
  id: Int!
  "角色IDs"
  powerIds: [Int]!
}

input UpdateRoleInput {
  "角色ID"
  id: Int!
  "角色名称"
  roleName: String!
}

input VarietyInput {
  " 品类id"
  categoryId: Int
  " 品种id"
  varietyId: Int
}

" 查询记录详情"
input WareHouseRecordDetailInput {
  " 数据来源"
  dataFrom: String
  " 调拨单id"
  flowId: ID
  " 申请订单id"
  orderId: ID
  " 出/入(记录Id)"
  recordId: ID
  " 记录类型(如:采购、退货)"
  type: WarehouseAllType
}

input WarehouseConditionInput {
  " 是否隐藏没有库存的仓库，默认不隐藏"
  hideNoStock: Boolean
}

"创建仓库参数"
input WarehouseCreateInput {
  "仓库地址"
  address: String
  "门牌号"
  houseNumber: String
  "仓库经纬度 经度,纬度"
  location: [BigDecimal]
  "仓库名称"
  name: String!
  "备注"
  remark: String
  "仓库状态"
  status: WarehouseStatEnum
  "仓库类型"
  type: Int!
}

"获取仓库列表入参"
input WarehouseListInput {
  "是否包括禁用状态仓库(默认false,只查询启用的)"
  disableIncluded: Boolean
}

"获取仓库分页列表入参"
input WarehousePageInput {
  pageCurrent: Int
  pageSize: Int
}

"根据id获取仓库"
input WarehouseQueryInput {
  id: ID!
}

" 列表分页入参"
input WarehouseReportFormPageInput {
  " 分页入参"
  pageInput: BasePage!
  reportFormQueryInput: WarehouseReportFormQueryInput
}

" 列表通用查询入参"
input WarehouseReportFormQueryInput {
  " 批次号"
  batchCode: String
  " 商品sku 名称"
  commoditySkuName: String
  " 入库单号"
  orderCode: String
  " 入库时间终"
  warehouseEndTime: Long
  " 所属仓库"
  warehouseId: ID
  " 入库时间起"
  warehouseStartTime: Long
  " 入库类型"
  warehouseType: WareHouseType
}

"编辑仓库参数"
input WarehouseUpdateInput {
  "仓库地址"
  address: String
  "门牌号"
  houseNumber: String
  id: ID!
  "仓库经纬度 经度,纬度"
  location: [BigDecimal]
  "仓库名称"
  name: String
  "备注"
  remark: String
  "仓库状态"
  status: WarehouseStatEnum
}

" 创建订单入参"
input WholesaleOrderCreateInput {
  " 联系人id(公司类型的客户)"
  contactId: Int
  " 客户ID"
  customerId: Int
  " 订单开单模式"
  orderSchema: OrderSchema
  " 订单类型"
  orderType: OrderType
  " 应付金额"
  payableAmount: BigDecimal
  " 预支付方式"
  prePaymentType: [PaymentType]
  " 备注"
  remark: String
  " 商品信息"
  wholesaleOrderDetailCreateInputs: [WholesaleOrderDetailCreateInput!]!
}

" 创建批发订单详情"
input WholesaleOrderDetailCreateInput {
  "标签id集合"
  labelIdList: [ID]
  " 购买数量"
  quantity: BigDecimal!
  "数量单位类型"
  quantityUnitType: Int!
  "商品skuId"
  skuId: Int!
  " 库存ID"
  stockId: ID!
  " 单价"
  unitPrice: BigDecimal!
}

" 更新批发订单详情"
input WholesaleOrdereDetailUpdateInput {
  " 库存ID"
  orderDetail: Int!
  " 购买数量"
  quantity: BigDecimal!
  " 单价"
  unitPrice: BigDecimal!
}

input pageReturnOrderInput {
  pageCurrent: Int
  pageSize: Int
  " 订单状态"
  status: ReturnOrderEnum
}
